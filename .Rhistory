#deciduous basal area
DECID_BA <- ba %>%
filter(DIV == "d")
mD_BA <- glm(BA ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = DECID_BA)
# residuals
plot(mD_BA)
# parameters
summary(mD_BA); model_parameters(mD_BA)
# plots
plot_model(mD_BA, show.values = T, show.p = T, sort.est = T) # effect sizes
plot_model(mD_BA, type = "pred", terms = c("TREAT", "SITE")) # predicted values
# quasi
mD_BA <- glm(BA ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson, data = ba)
# residuals
plot(mD_BA)
# parameters
summary(mD_BA); model_parameters(mD_BA)
# plots
plot_model(mD_BA, show.values = T, show.p = T, sort.est = T) # effect sizes
plot_model(mD_BA, type = "pred", terms = c("TREAT", "SITE")) # predicted values
# basal area
ba <- read.csv(here("ba.csv"), stringsAsFactors = F); ba <- ba[ba$TREAT != 0,]
# conifer basal area
CONIF_BA <- ba %>%
filter(DIV == "c")
mC_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
library(MASS)
mC_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
# residuals
plot(mC_BA)
# parameters
summary(mC_BA); model_parameters(mC_BA)
# plots
plot_model(mC_BA, show.values = T, show.p = T, sort.est = T) # effect sizes
plot_model(mC_BA, type = "pred", terms = c("TREAT", "SITE")) # predicted values
#deciduous basal area
DECID_BA <- ba %>%
filter(DIV == "d")
mD_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data =DECID_BA)
# residuals
plot(mD_BA)
# parameters
summary(mD_BA); model_parameters(mD_BA)
# plots
plot_model(mD_BA, show.values = T, show.p = T, sort.est = T) # effect sizes
plot_model(mD_BA, type = "pred", terms = c("TREAT", "SITE")) # predicted values
dalton <- read.csv(here("data/dalton_DBH.csv"))
# merging salix
dalton$SPP[dalton$SPP == "SAGL"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_3"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_4"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_5"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_6"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_7"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_8"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_?"] <- "SALIX"
dalton$SPP[dalton$SPP == "SADE"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAPU"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dalton <- dalton %>%
filter(SPP != "UNKNOWN")
# dropping dead trees
dalton <- dalton %>%
filter(CANOPY > 0)
# adding conifer and deciduous divisons
dalton$DIV[dalton$SPP == "PIME"] <- "c"
dalton$DIV[dalton$SPP == "BENE"] <- "d"
dalton$DIV[dalton$SPP == "POTR"] <- "d"
dalton$DIV[dalton$SPP == "SALIX"] <- "d"
dalton$DIV[dalton$SPP == "ARCTO"] <- "d"
dalton$DIV[dalton$SPP == "ALCR"] <- "d"
# summing according to species
dalton_dens <- dalton %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
dalton_dens$COUNT <- dalton_dens$COUNT_unscale
unique(dalton$PLOT[dalton$QUAD ==1]) # 44_0 28_1
dalton_dens$COUNT[dalton_dens$PLOT == "28_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "28_1"]*2
dalton_dens$COUNT[dalton_dens$PLOT == "44_0"] <- dalton_dens$COUNT[dalton_dens$PLOT == "44_0"]*2
unique(dalton$PLOT[dalton$QUAD == 0.1]) # 15_3 12_1 50_1
dalton_dens$COUNT[dalton_dens$PLOT == "15_3"] <- dalton_dens$COUNT[dalton_dens$PLOT == "15_3"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "12_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "12_1"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "50_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "50_1"]*20
dalton_dens <- dalton_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
steese <- read.csv(here("data/Steese_DBH.csv"), stringsAsFactors = F)
# merging salix
steese$SPP[steese$SPP == "SAGL"] <- "SALIX"
steese$SPP[steese$SPP == "SA_4"] <- "SALIX"
steese$SPP[steese$SPP == "SA_5"] <- "SALIX"
steese$SPP[steese$SPP == "SA_6"] <- "SALIX"
steese$SPP[steese$SPP == "SA_7"] <- "SALIX"
steese$SPP[steese$SPP == "SADE"] <- "SALIX"
# adding conifer and deciduous divisons
steese$DIV[steese$SPP == "PIME"] <- "c"
steese$DIV[steese$SPP == "BENE"] <- "d"
steese$DIV[steese$SPP == "POTR"] <- "d"
steese$DIV[steese$SPP == "POBA"] <- "d"
steese$DIV[steese$SPP == "SALIX"] <- "d"
steese$DIV[steese$SPP == "ARCTO"] <- "d"
steese$DIV[steese$SPP == "ALCR"] <- "d"
# dropping dead trees
steese <- steese %>%
filter(CAN > 0)
# dropping dead trees
steese <- steese %>%
filter(CANOPY > 0)
# summing according to species
steese_dens <- steese %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
# scaling up
steese_dens$COUNT <- steese_dens$COUNT_unscale
unique(steese$PLOT[steese$QUAD ==1]) # "33_1" "18_1" "4_2"  "19_2" "28_1" "1_0"  "31_0" "6_0"  "9_0"
steese_dens$COUNT[steese_dens$PLOT == "33_1"] <- steese_dens$COUNT[steese_dens$PLOT == "33_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "18_1"] <- steese_dens$COUNT[steese_dens$PLOT == "18_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "4_2"] <- steese_dens$COUNT[steese_dens$PLOT == "4_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "19_2"] <- steese_dens$COUNT[steese_dens$PLOT == "19_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "28_1"] <- steese_dens$COUNT[steese_dens$PLOT == "28_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "6_0"] <- steese_dens$COUNT[steese_dens$PLOT == "6_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "1_0"] <- steese_dens$COUNT[steese_dens$PLOT == "1_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "31_0"] <- steese_dens$COUNT[steese_dens$PLOT == "31_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "9_0"] <- steese_dens$COUNT[steese_dens$PLOT == "9_0"]*2
steese_dens <- steese_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
seedling <- read.csv(here("seedling_Density.csv"))
View(steese_dens)
# density
library(tidyverse)
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
dalton <- read.csv(here("data/dalton_DBH.csv"))
# merging salix
dalton$SPP[dalton$SPP == "SAGL"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_3"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_4"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_5"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_6"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_7"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_8"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_?"] <- "SALIX"
dalton$SPP[dalton$SPP == "SADE"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAPU"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dalton <- dalton %>%
filter(SPP != "UNKNOWN")
# dropping dead trees
dalton <- dalton %>%
filter(CANOPY > 0)
# adding conifer and deciduous divisons
dalton$DIV[dalton$SPP == "PIME"] <- "c"
dalton$DIV[dalton$SPP == "BENE"] <- "d"
dalton$DIV[dalton$SPP == "POTR"] <- "d"
dalton$DIV[dalton$SPP == "SALIX"] <- "d"
dalton$DIV[dalton$SPP == "ARCTO"] <- "d"
dalton$DIV[dalton$SPP == "ALCR"] <- "d"
# summing according to species
dalton_dens <- dalton %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
dalton_dens$COUNT <- dalton_dens$COUNT_unscale
unique(dalton$PLOT[dalton$QUAD ==1]) # 44_0 28_1
dalton_dens$COUNT[dalton_dens$PLOT == "28_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "28_1"]*2
dalton_dens$COUNT[dalton_dens$PLOT == "44_0"] <- dalton_dens$COUNT[dalton_dens$PLOT == "44_0"]*2
unique(dalton$PLOT[dalton$QUAD == 0.1]) # 15_3 12_1 50_1
dalton_dens$COUNT[dalton_dens$PLOT == "15_3"] <- dalton_dens$COUNT[dalton_dens$PLOT == "15_3"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "12_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "12_1"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "50_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "50_1"]*20
dalton_dens <- dalton_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
steese <- read.csv(here("data/Steese_DBH.csv"), stringsAsFactors = F)
# merging salix
steese$SPP[steese$SPP == "SAGL"] <- "SALIX"
steese$SPP[steese$SPP == "SA_4"] <- "SALIX"
steese$SPP[steese$SPP == "SA_5"] <- "SALIX"
steese$SPP[steese$SPP == "SA_6"] <- "SALIX"
steese$SPP[steese$SPP == "SA_7"] <- "SALIX"
steese$SPP[steese$SPP == "SADE"] <- "SALIX"
# adding conifer and deciduous divisons
steese$DIV[steese$SPP == "PIME"] <- "c"
steese$DIV[steese$SPP == "BENE"] <- "d"
steese$DIV[steese$SPP == "POTR"] <- "d"
steese$DIV[steese$SPP == "POBA"] <- "d"
steese$DIV[steese$SPP == "SALIX"] <- "d"
steese$DIV[steese$SPP == "ARCTO"] <- "d"
steese$DIV[steese$SPP == "ALCR"] <- "d"
# dropping dead trees
steese <- steese %>%
filter(CANOPY > 0)
# summing according to species
steese_dens <- steese %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
# scaling up
steese_dens$COUNT <- steese_dens$COUNT_unscale
unique(steese$PLOT[steese$QUAD ==1]) # "33_1" "18_1" "4_2"  "19_2" "28_1" "1_0"  "31_0" "6_0"  "9_0"
steese_dens$COUNT[steese_dens$PLOT == "33_1"] <- steese_dens$COUNT[steese_dens$PLOT == "33_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "18_1"] <- steese_dens$COUNT[steese_dens$PLOT == "18_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "4_2"] <- steese_dens$COUNT[steese_dens$PLOT == "4_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "19_2"] <- steese_dens$COUNT[steese_dens$PLOT == "19_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "28_1"] <- steese_dens$COUNT[steese_dens$PLOT == "28_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "6_0"] <- steese_dens$COUNT[steese_dens$PLOT == "6_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "1_0"] <- steese_dens$COUNT[steese_dens$PLOT == "1_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "31_0"] <- steese_dens$COUNT[steese_dens$PLOT == "31_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "9_0"] <- steese_dens$COUNT[steese_dens$PLOT == "9_0"]*2
steese_dens <- steese_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
seedling <- read.csv(here("seedling_Density.csv"))
seedling$COUNT <- seedling$SPP_COUNT_PLOT*2
seedling <- seedling %>%
select(SITE, PLOT, TREAT, DIVISION, SPP, COUNT) %>%
rename("DIV" = "DIVISION")
dalt_seed_dens <- bind_rows(dalton_dens, steese_dens, seedling)
species_dens <- dalt_seed_dens %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = sum(COUNT))
species_dens$COUNT_HA <- species_dens$COUNT * 50
write.csv(species_dens,"species_dens.csv", row.names = F)
View(steese)
View(species_dens)
# bringing in data
# density
all <- read.csv(here("species_dens.csv")); all <- all[all$TREAT !=0,] # removing unburned sites
library(sjPlot)
library(here)
library(parameters)
library(stats)
library(ggplot2)
library(cowplot); theme_set(theme_cowplot())
options(scipen = 9999)
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
View(CONIF_dens)
# all$CONIF_COUNT_HA_log <- log(all$CONIF_COUNT_HA + 1)
mC_D <- glm(COUNT_HA ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
# plots
plot_model(mC_D, show.values = T, show.p = T) # effect sizes
plot_model(mC_D, type = "pred", terms = c("TREAT", "SITE")) # predicted values
# testing quasi poisson
mC_D_qp <- glm(CONIF_COUNT_HA ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson, data = all)
# testing quasi poisson
mC_D_qp <- glm(COUNT_HA ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson, data = CONIF_dens)
# residuals
plot(mC_D_qp)
# parameters
summary(mC_D_qp); model_parameters(mC_D_qp)
# testing quasi poisson
mC_D_qp <- glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson, data = CONIF_dens)
# residuals
plot(mC_D_qp)
# parameters
summary(mC_D_qp); model_parameters(mC_D_qp)
# testing quasi poisson
CONIF_dens$COUNT_log <- log(CONIF_dens$COUNT + 1)
mC_D_qp <- glm(COUNT_log ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson, data = CONIF_dens)
# residuals
plot(mC_D_qp)
# parameters
summary(mC_D_qp); model_parameters(mC_D_qp)
# all$CONIF_COUNT_HA_log <- log(all$CONIF_COUNT_HA + 1)
mC_D <- glm(COUNT_log ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
library(MASS)
# bringing in data
# density
all <- read.csv(here("species_dens.csv")); all <- all[all$TREAT !=0,] # removing unburned sites
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
mC_D <- glm.nb(COUNT_HA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
CONIF_dens$COUNT_HA_log <- log(CONIF_dens$COUNT_HA + 1)
mC_D <- glm.nb(COUNT_HA_log ~ TREAT + SITE + (TREAT*SITE), data = CONIF_dens)
# residuals
plot(mC_D)
CONIF_dens$COUNT_log <- log(CONIF_dens$COUNT + 1)
mC_D <- glm.nb(COUNT_log ~ TREAT + SITE + (TREAT*SITE), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
# plots
plot_model(mC_D, show.values = T, show.p = T) # effect sizes
plot_model(mC_D, type = "pred", terms = c("TREAT", "SITE"))
# deciduous density
DECID_dens <- species_dens %>%
filter(DIV == "d")
mD_D <- glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), data = DECID_dens)
# residuals
plot(mD_D)
# parameters
summary(mD_D); model_parameters(mD_D)
# plots
plot_model(mD_D, show.values = T, show.p = T) # effect sizes
plot_model(mD_D, type = "pred", terms = c("TREAT", "SITE")) # predicted values
DECID_dens$COUNT_log <- log(DECID_dens$COUNT + 1)
mD_D <- glm.nb(COUNT_log ~ TREAT + SITE + (TREAT*SITE), data = DECID_dens)
# residuals
plot(mD_D)
# parameters
summary(mD_D); model_parameters(mD_D)
# plots
plot_model(mD_D, show.values = T, show.p = T) # effect sizes
plot_model(mD_D, type = "pred", terms = c("TREAT", "SITE")) # predicted values
# deciduous density
DECID_dens <- species_dens %>%
filter(DIV == "d")
DECID_dens$COUNT_log <- log(DECID_dens$COUNT + 1)
mD_D <- glm(COUNT_log ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = DECID_dens)
# residuals
plot(mD_D)
# parameters
summary(mD_D); model_parameters(mD_D)
# plots
plot_model(mD_D, show.values = T, show.p = T) # effect sizes
plot_model(mD_D, type = "pred", terms = c("TREAT", "SITE")) # predicted values
# TEST deciduous density
mD_D <- glm(COUNT_log ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson, data = DECID_dens)
# residuals
plot(mD_D)
# parameters
summary(mD_D); model_parameters(mD_D)
# plots
plot_model(mD_D, show.values = T, show.p = T) # effect sizes
plot_model(mD_D, type = "pred", terms = c("TREAT", "SITE"))
CONIF_dens$COUNT_log <- log(CONIF_dens$COUNT + 1)
mC_D <- glm.nb(COUNT_log ~ TREAT + SITE + (TREAT*SITE), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
mC_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
# conifer basal area
CONIF_BA <- ba %>%
filter(DIV == "c")
mC_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
# basal area
ba <- read.csv(here("ba.csv"), stringsAsFactors = F); ba <- ba[ba$TREAT != 0,]
# bringing in data
# density
species_dens <- read.csv(here("species_dens.csv")); all <- all[all$TREAT !=0,] # removing unburned site
ba <- read.csv(here("ba.csv"), stringsAsFactors = F); ba <- ba[ba$TREAT != 0,] # basal area
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
CONIF_dens$COUNT_log <- log(CONIF_dens$COUNT + 1)
mC_D <- glm.nb(COUNT_log ~ TREAT + SITE + (TREAT*SITE), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
# plots
plot_model(mC_D, show.values = T, show.p = T) # effect sizes
plot_model(mC_D, type = "pred", terms = c("TREAT", "SITE"))
# deciduous density
DECID_dens <- species_dens %>%
filter(DIV == "d")
DECID_dens$COUNT_log <- log(DECID_dens$COUNT + 1)
mD_D <- glm.nb(COUNT_log ~ TREAT + SITE + (TREAT*SITE), data = DECID_dens)
# residuals
plot(mD_D)
r
# parameters
summary(mD_D); model_parameters(mD_D)
# conifer basal area
CONIF_BA <- ba %>%
filter(DIV == "c")
mC_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
CONIF_BA$BA_log <- log(CONIF_BA$BA + 1)
mC_BA <- glm.nb(BA_log ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
# residuals
plot(mC_BA)
# parameters
summary(mC_BA); model_parameters(mC_BA)
# plots
plot_model(mC_BA, show.values = T, show.p = T, sort.est = T) # effect sizes
plot_model(mC_BA, type = "pred", terms = c("TREAT", "SITE")) # predicted values
#deciduous basal area
DECID_BA <- ba %>%
filter(DIV == "d")
DECID_BA$BA_log <- log(DECID_BA + 1)
DECID_BA$BA_log <- log(DECID_BA$BA + 1)
mD_BA <- glm.nb(BA_log ~ TREAT + SITE + (TREAT*SITE), data =DECID_BA)
# residuals
plot(mD_BA)
# parameters
summary(mD_BA); model_parameters(mD_BA)
# plots
plot_model(mD_BA, show.values = T, show.p = T, sort.est = T) # effect sizes
plot_model(mD_BA, type = "pred", terms = c("TREAT", "SITE")) # predicted values
library(tidyverse)
library(here)
# seven mile
upland <- read.csv(here("tree regen manuscript",
"/climate/up_seven_airtemp.csv"), stringsAsFactors = F)
# seven mile
upland <- read.csv(here(
"/climate/up_seven_airtemp.csv"), stringsAsFactors = F)
# winter
win_up <- upland %>%
na.omit() %>%
filter(Month == "09/" | Month == "10/" | Month == "11/"|
Month == "12/"| Month == "01/" | Month == "02/"|
Month == "03/")
summary(win_up$Ave)
sd(win_up$Ave)
# summer
sum_up <- upland %>%
na.omit() %>%
filter(Month == "04/" | Month == "05/" | Month == "06/"|
Month == "07/")
summary(sum_up$Ave)
sd(sum_up$Ave)
library(sjPlot)
library(here)
library(parameters)
library(stats)
library(ggplot2)
library(cowplot); theme_set(theme_cowplot())
options(scipen = 9999)
# bringing in data
# density
all <- read.csv(here("species_dens.csv")); all <- all[all$TREAT !=0,] # removing unburned sites
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
#  poisson distribution
library(tidyverse)
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
# bringing in data
# density
species_dens <- read.csv(here("species_dens.csv")); all <- all[all$TREAT !=0,] # removing unburned sites
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
# all$CONIF_COUNT_HA_log <- log(all$CONIF_COUNT_HA + 1)
mC_D <- glm(COUNT_log ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
# all$CONIF_COUNT_HA_log <- log(all$CONIF_COUNT_HA + 1)
mC_D <- glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
# parameters
summary(mC_D); model_parameters(mC_D)
#  negative binomial distribution
library(sjPlot)
library(MASS)
library(here)
library(parameters)
library(stats)
library(ggplot2)
library(cowplot); theme_set(theme_cowplot())
options(scipen = 9999)
# bringing in data
# density
species_dens <- read.csv(here("species_dens.csv")); all <- all[all$TREAT !=0,] # removing unburned site
ba <- read.csv(here("ba.csv"), stringsAsFactors = F); ba <- ba[ba$TREAT != 0,] # basal area
# conifer density
CONIF_dens <- species_dens %>%
filter(DIV == "c")
mC_D <- glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), data = CONIF_dens)
# residuals
plot(mC_D)
# parameters
summary(mC_D); model_parameters(mC_D)
# parameters
summary(mC_D);  # model_parameters(mC_D)
# plots
plot_model(mC_D, show.values = T, show.p = T) # effect sizes
plot_model(mC_D, type = "pred", terms = c("TREAT", "SITE"))
# deciduous density
DECID_dens <- species_dens %>%
filter(DIV == "d")
mD_D <- glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), data = DECID_dens)
# residuals
plot(mD_D)
# parameters
summary(mD_D); # model_parameters(mD_D)
# plots
plot_model(mD_D, show.values = T, show.p = T) # effect sizes
#deciduous basal area
DECID_BA <- ba %>%
filter(DIV == "d")
mD_BA <- glm.nb(BA ~ TREAT + SITE + (TREAT*SITE), data =DECID_BA)
# residuals
plot(mD_BA)
# parameters
summary(mD_BA); # model_parameters(mD_BA)
# plots
plot_model(mD_BA, show.values = T, show.p = T, sort.est = T) # effect sizes

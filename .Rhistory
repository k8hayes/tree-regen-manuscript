filter(TREAT != 0) %>%
ggplot(aes(x = as.factor(TREAT), y = BA_ha, fill = DIV)) +
geom_boxplot() + facet_wrap(~SITE) + ylim(0,0.35) +
labs(x = "Number of Fires", y = "Basal Area (m2/ha)",
title = "Basal Area in Burned Plots") +
scale_fill_manual(values = c("#f0f0f0", "#bdbdbd"),
name = "Division",
labels = c("Conifer", "Deciduous"))
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
se <- function(x) sqrt(var(x)/length(x))
dalton <- read.csv(here("data/dalton_DBH.csv"))
View(dalton)
steese <- read.csv(here("data/Steese_DBH_raw.csv"))
dbh <- rbind(dalton, steese)
write.csv(dbh, here("data/dbh_raw.csv"), row.names = FALSE)
dbh <- read.csv(here("data/dbh_raw.csv"))
dbh <- read.csv(here("data/dbh_raw.csv"))
# merging salix
dbh$SPP[dbh$SPP == "SAGL"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_3"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_4"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_5"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_6"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_7"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_8"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_?"] <- "SALIX"
dbh$SPP[dbh$SPP == "SADE"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAPU"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dbh <- dbh %>%
filter(SPP != "UNKNOWN")
# adding conifer and deciduous divisons
dbh$DIV[dbh$SPP == "PIME"] <- "c"
dbh$DIV[dbh$SPP == "BENE"] <- "d"
dbh$DIV[dbh$SPP == "POTR"] <- "d"
dbh$DIV[dbh$SPP == "SALIX"] <- "d"
dbh$DIV[dbh$SPP == "ARCTO"] <- "d"
dbh$DIV[dbh$SPP == "ALCR"] <- "d"
# adding expansion factors
# assuming a plot is 1/25 of a ha, so half a plot is 1/50 of a ha.
dbh$EXP_FACT[dbh$QUAD == 2] <- 50
dbh$EXP_FACT[dbh$QUAD == 1] <- 100
dbh$EXP_FACT[dbh$QUAD == .1] <- 1000
dbh$EXP_FACT[dbh$QUAD == .2] <- 500
write.csv(dbh, here("data/dbh.csv"), row.names = F)
dbh <- read.csv(here("data.dbh.csv"))
write.csv(dbh, here("data/dbh.csv"), row.names = F)
dbh <- read.csv(here("data.dbh.csv"))
dbh <- read.csv(here("data/dbh.csv"))
dbh <- read.csv(here("data/dbh.csv"))
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
View(dbh)
unique(dbh$DIV)
which(dbh$DIV == "NA")
which(dbh$DIV == "<NA>")
which(dbh$DIV == <NA>)
is.na(dbh$DIV)
which(is.na(dbh$DIV))
dbh[,3560]
dbh[3560,]
dbh$DIV[dbh$SPP == "POBA"] <- "d"
dbh[3568,]
dbh[3569,]
dbh <- read.csv(here("data/dbh_raw.csv"))
# merging salix
dbh$SPP[dbh$SPP == "SAGL"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_3"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_4"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_5"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_6"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_7"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_8"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_?"] <- "SALIX"
dbh$SPP[dbh$SPP == "SADE"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAPU"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dbh <- dbh %>%
filter(SPP != "UNKNOWN")
# adding conifer and deciduous divisons
dbh$DIV[dbh$SPP == "PIME"] <- "c"
dbh$DIV[dbh$SPP == "BENE"] <- "d"
dbh$DIV[dbh$SPP == "POTR"] <- "d"
dbh$DIV[dbh$SPP == "POBA"] <- "d"
dbh$DIV[dbh$SPP == "SALIX"] <- "d"
dbh$DIV[dbh$SPP == "ARCTO"] <- "d"
dbh$DIV[dbh$SPP == "ALCR"] <- "d"
# adding expansion factors
# assuming a plot is 1/25 of a ha, so half a plot is 1/50 of a ha.
dbh$EXP_FACT[dbh$QUAD == 2] <- 50
dbh$EXP_FACT[dbh$QUAD == 1] <- 100
dbh$EXP_FACT[dbh$QUAD == .1] <- 1000
dbh$EXP_FACT[dbh$QUAD == .2] <- 500
write.csv(dbh, here("data/dbh.csv"), row.names = F)
dbh <- read.csv(here("data/dbh.csv"))
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
# selecting down columns
spp_dens <- spp_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
View(spp_dens)
# selecting down columns
spp_dens <- spp_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, EXP_FACT, COUNT_unscale)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n(), EXP_FACT = max(EXP_FACT)) %>%
rename("COUNT_unscale" = "n")
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n(), EXP_FACT = max(EXP_FACT))
# selecting down columns
spp_dens <- spp_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, EXP_FACT, COUNT_unscale)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP, .drop = F) %>%
summarise(COUNT_unscale = n(), EXP_FACT = max(EXP_FACT))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n(), EXP_FACT = max(EXP_FACT)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, DIV, SPP, ffill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n(), EXP_FACT = max(EXP_FACT)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, DIV, SPP, fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
# selecting down columns
spp_dens <- spp_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, EXP_FACT, COUNT_unscale)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
# selecting down columns
spp_dens <- spp_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, EXP_FACT, COUNT_unscale)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n())
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP, fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT,EXP_FACT, DIV, fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(SPP,
fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(SPP, fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n())
%>% complete(fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(SPP,fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT,EXP_FACT, DIV, SPP, .drop = F) %>%
summarise(COUNT_unscale = n())
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP, .drop = F) %>%
summarise(COUNT_unscale = n())
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP, .drop = F) %>%
summarise(COUNT_unscale = n())
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(SPP, fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, DIV, SPP, fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
count()
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
count(.drop = F)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP, .drop = F)) %>%
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP, .drop = F) %>%
count()
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
add_count()
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally()
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP, .drop = F) %>%
tally()
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
count(SPP)
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_unscale = n()) %>%
ungroup() %>%
complete(SPP, nesting(SITE, TREAT, PLOT, DIV), fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
ungroup() %>%
complete(SPP, nesting(SITE, TREAT, PLOT, DIV), fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(SPP, nesting(SITE, TREAT, PLOT, DIV), fill = list(COUNT_unscale = 0))
# summing according to species
spp_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT_unscale = n()) %>%
complete(SPP, nesting(SITE, TREAT, PLOT, DIV), fill = list(COUNT_unscale = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
count(SPP, .drop = F)
View(dbh_dens)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
add_count()
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
count(SPP)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally(SPP)
class(dbh$DIV)
class(dbh$PLOT)
class(dbh$SPP)
class(dbh$TREAT)
class(dbh$SITE)
dbh$TREAT <- as.factor(dbh$TREAT)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally(SPP)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
count(SPP)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
count(SPP, .drop = F)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = n())
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = n()) %>%
complete(SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, DIV, SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete(SITE, PLOT, SPP, fill = list(COUNT = 0))
library(tidyverse)
library(cowplot)
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
se <- function(x) sqrt(var(x)/length(x))
dbh <- read.csv(here("data/dbh_raw.csv"))
# merging salix
dbh$SPP[dbh$SPP == "SAGL"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_3"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_4"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_5"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_6"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_7"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_8"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_?"] <- "SALIX"
dbh$SPP[dbh$SPP == "SADE"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAPU"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dbh <- dbh %>%
filter(SPP != "UNKNOWN")
# adding conifer and deciduous divisons
dbh$DIV[dbh$SPP == "PIME"] <- "c"
dbh$DIV[dbh$SPP == "BENE"] <- "d"
dbh$DIV[dbh$SPP == "POTR"] <- "d"
dbh$DIV[dbh$SPP == "POBA"] <- "d"
dbh$DIV[dbh$SPP == "SALIX"] <- "d"
dbh$DIV[dbh$SPP == "ARCTO"] <- "d"
dbh$DIV[dbh$SPP == "ALCR"] <- "d"
# adding expansion factors
# assuming a plot is 1/25 of a ha, so half a plot is 1/50 of a ha.
dbh$EXP_FACT[dbh$QUAD == 2] <- 50
dbh$EXP_FACT[dbh$QUAD == 1] <- 100
dbh$EXP_FACT[dbh$QUAD == .1] <- 1000
dbh$EXP_FACT[dbh$QUAD == .2] <- 500
write.csv(dbh, here("data/dbh.csv"), row.names = F)
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete(SITE, PLOT, SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete( PLOT, SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete(SITE, PLOT, SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
complete(SITE, TREAT,  PLOT, SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,  PLOT) %>%
complete( SPP, fill = list(COUNT = 0))
# summing according to species
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT, DIV) %>%
complete( SPP, fill = list(COUNT = 0))
dbh_dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT = 0))
# adding divisions back in
dens$DIV[dens$SPP == "PIME"] <- "c"
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT = 0))
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT = 0))
# adding divisions back in
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
View(dbh_dens)
View(dens)
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
slice(rep(1:n(EXP_FACT), each = 4))
test <- dbh %>%
group_by(SITE, TREAT, PLOT, EXP_FACT) %>%
slice(rep(1:n(), each = 4))
View(test)
test <- dbh %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
slice(rep(1:n(), each = 4))
test <- dbh %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
slice(rep(1:n()))
test <- dbh %>%
group_by(SITE, TREAT, PLOT,SPP) %>%
summarise(EXP_FACT1 = max(EXP_FACT))
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT1 = max(EXP_FACT))
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT1 = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7))
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7))
dens$EXP_FACT <- test$EXP_FACT
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0))
# adding divisions back in
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7))
dens$EXP_FACT <- test$EXP_FACT
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
dens$DIV[dens$SPP == "SALIX"] <- "d"

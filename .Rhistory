decid_dens <- dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
density <- plot_grid(conif_dens, decid_dens, nrow = 2)
density
density <- plot_grid(conif_dens, decid_dens, nrow = 2, ncol = 1)
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
# density plot
conif_dens <- dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Conifer Density", title = "Unburned Density (stem/ha)") +
theme(plot.title = element_text(hjust = 0))
# DECID density
decid_dens <- dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
density <- plot_grid(conif_dens, decid_dens, nrow = 2, ncol = 1)
density <- plot_grid(conif_dens, decid_dens)
library(cowplot)
density <- plot_grid(conif_dens, decid_dens)
density <- plot_grid(conif_dens, decid_dens, ncol = 2)
density <- plot_grid(conif_dens, decid_dens, rel_widths = c(1,1))
# DECID density
decid_dens <- dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
decid_dens
conif_dens
# basal area
# CONIF basal area
#conif_ba <-
ba %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = " ",y = "Conifer Basal Area", title = "Unburned Basal Area (m2/ha)")   +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID basal area
# decid_ba <-
ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Decid. Basal Area", title = "")  + ylim(0, 0.5) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID basal area
# decid_ba <-
ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Decid. Basal Area", title = "")   +
scale_x_discrete(labels = c("Upland", "Lowland"))
plot_dens <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_HA = mean(COUNT_HA))
# density plot
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Conifer Density", title = "Unburned Density (stem/ha)") +
theme(plot.title = element_text(hjust = 0))
conif_dens
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
decid_dens
density <- plot_grid(conif_dens, decid_dens, rel_widths = c(1,1))
density <- plot_grid(conif_dens, decid_dens)
library(ggplot2)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
density <- plot_grid(conif_dens, decid_dens)
density <- grid.arrange(conif_dens, decid_dens)
density <- cowplot::plot_grid(conif_dens, decid_dens)
density
# density plot
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Conifer Density", title = "Unburned Density (stem/ha)") +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
plot_ba <- ba %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(BA_HA = mean(BA_ha))
plot_ba <- ba %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(BA_ha = mean(BA_ha))
# CONIF basal area
conif_ba <- plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = " ",y = "Conifer Basal Area", title = "Unburned Basal Area (m2/ha)")   +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
conif_ba
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Decid. Basal Area", title = "")   +
scale_x_discrete(labels = c("Upland", "Lowland"))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, nrow = 2)
ba
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
ba
plot <- plot_grid(ba, density)
plot <- cowplot:: plot_grid(ba, density)
plot
plot <- cowplot:: plot_grid(ba, density, nrow = 2)
plot
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Conifer Density", title = "Unburned Density (stem/ha)") +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
density <- cowplot::plot_grid(conif_dens, decid_dens)
density
conif_ba <- plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = " ",y = "Conifer Basal Area", title = "Unburned Basal Area (m2/ha)")   +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Decid. Basal Area", title = "")   +
scale_x_discrete(labels = c("Upland", "Lowland"))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
# save_plot("ba_boxplot.png", ba)
plot <- cowplot:: plot_grid(ba, density, nrow = 2)
plot
top_row <- align_plots(conif_dens, conif_ba, align = "v", axis = 'l')
bottom_row <- align_plots(decid_dens, decid_ba, align = "v", axis = "l")
cowplot:: plot_grid(top_row, bottom_row, ncol = 1)
cowplot:: plot_grid(top_row[[1]], bottom_row, ncol = 1)
cowplot:: plot_grid(top_row, bottom_row, ncol = 1)
cowplot:: plot_grid(top_row, bottom_row)
cowplot:: plot_grid(top_row, bottom_row, nrow = 2)
lrow <- cowplot:: plot_grid(conif_dens, conif_ba, align = "v", axis = 'l', ncol = 1)
r_row <- cowplot:: plot_grid(decid_dens, decid_ba, align = "v", axis = "l", ncol = 1)
cowplot:: plot_grid(l_row, r_row, nrow = 2)
cowplot:: plot_grid(lrow, r_row, nrow = 2)
cowplot:: plot_grid(lrow, r_row, ncol = 2)
save_plot("unburned.png", plot)
lrow <- cowplot:: plot_grid(conif_dens, conif_ba, align = "v", axis = 'l', ncol = 1)
rrow <- cowplot:: plot_grid(decid_dens, decid_ba, align = "v", axis = "l", ncol = 1)
plot <- cowplot:: plot_grid(lrow, rrow, ncol = 2)
save_plot("unburned.png", plot)
plot
# getting values
dens <- read.csv(here("data/density.csv"))
treat_dens <- dens %>%
group_by(SITE, TREAT, DIV) %>%
summarise(AV = mean(COUNT_HA), SE = se(COUNT_HA))
treat_dens$SE <- round(treat_dens$SE, digits = 0)
treat_dens$AV <- round(treat_dens$AV, digits = 0)
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
se <- function(x) sqrt(var(x)/length(x))
library(sjPlot)
library(MASS)
library(logNormReg)
dens <- read.csv(here("data/density.csv"))
treat_dens <- dens %>%
group_by(SITE, TREAT, DIV) %>%
summarise(AV = mean(COUNT_HA), SE = se(COUNT_HA))
treat_dens$SE <- round(treat_dens$SE, digits = 0)
treat_dens$AV <- round(treat_dens$AV, digits = 0)
View(treat_dens)
dens <- read.csv(here("data/density.csv"))
treat_dens <- dens %>%
group_by(SITE, TREAT, DIV) %>%
summarise(AV = mean(COUNT_HA), SE = se(COUNT_HA))
treat_dens$SE <- round(treat_dens$SE, digits = 0)
treat_dens$AV <- round(treat_dens$AV, digits = 0)
se <- function(x) sqrt(var(x)/length(x))
treat_dens <- dens %>%
group_by(SITE, TREAT, DIV) %>%
summarise(AV = mean(COUNT_HA), SE = se(COUNT_HA))
treat_dens$SE <- round(treat_dens$SE, digits = 0)
treat_dens$AV <- round(treat_dens$AV, digits = 0)
View(treat_dens)
# bringing in data
ba <- read.csv(here("ba.csv"), stringsAsFactors = F)
# removing unburned sites
ba <- ba[ba$TREAT != 0,]
# looking at format of data, first three rows
ba[1:3,]
DECID_BA <- subset(ba, ba$DIV == "d")
DECID_BA$QUAD[DECID_BA$QUAD == 2] <- 50	#assuming a plot is 1/25 of a ha, so half a plot is 1/50 of a ha.
DECID_BA$QUAD[DECID_BA$QUAD == 1] <- 100
DECID_BA$QUAD[DECID_BA$QUAD == .1] <- 1000
DECID_BA$QUAD[DECID_BA$QUAD == .2] <- 500
#calc basal area
DECID_BA$BA <- (pi * (DECID_BA$DBH/2)^2)/10000	#convert to ba and cm2 to m2. Just pi*r2
DECID_BA$BA_ha <- DECID_BA$BA * DECID_BA$QUAD		#multiply by expansion factor
DECID_BA <- DECID_BA %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(BA = sum(BA_ha))
#histogram
hist(DECID_BA$BA)
# pulling in site attribute variables
attrib <- read.csv(here("data/site_attrib.csv"))
# no unburned
attrib <-attrib[attrib$TREAT != 0,]
# getting order of sites in dens
order <- as.vector(DECID_BA$PLOT) # don't worry that its 42, remember this doesnt include unburned
attrib <- attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order))
# adding in attributes to density file
DECID_BA$SLOPE <- attrib$SLOPE
DECID_BA$ELEV <- attrib$ELEVATION
DECID_BA$SOLAR <- attrib$SOLAR
rm(attrib)
treat_ba <- ba %>%
group_by(SITE, TREAT, DIV) %>%
summarise(AV = mean(BA_ha), SE = se(BA_ha))
View(treat_ba)
# bringing in data
ba <- read.csv(here("ba.csv"))
treat_ba <- ba %>%
group_by(SITE, TREAT, DIV) %>%
summarise(AV = mean(BA_ha), SE = se(BA_ha))
View(treat_ba)
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
se <- function(x) sqrt(var(x)/length(x))
library(sjPlot)
library(MASS)
library(logNormReg)
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0)) # adds zero-counts back in for species
# adding divisions back in
dens$DIV <- NA
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
dens$DIV <- as.factor(dens$DIV)
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>% # 7 species at each plot, so each plot is 7 rows
ungroup()
dens$EXP_FACT <- test$EXP_FACT # adding expansion factors back in
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
rm(test, dbh)
head(dens)
unique(dens#spp)
unique(dens$SPP)
test <- dens %>%
group_by(SITE, TREAT, PLOT. DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT. DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
View(dens)
test <- dens %>%
group_by(SITE, TREAT, PLOT. DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha))
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha))
View(test)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha)) %>%
ungroup() %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
# removing unburned sites
dens <- dens[dens$TREAT !=0,]
# pulling in site attribute variables
attrib <- read.csv(here("data/site_attrib.csv"))
# no unburned sites used here
attrib <-attrib[attrib$TREAT != 0,]
# getting order of sites in dens
order <- as.vector(unique(dens$PLOT)) # don't worry that its 42, remember this doesn't include unburned sites
attrib <- attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>% # matches the same order of plots as density file
slice(rep(1:n(), each = 8)) # replicates each value by 8, since there's 8 rows per plot (8 species)
# adding in attributes to density file
dens$SLOPE <- attrib$SLOPE
dens$ELEV <- attrib$ELEVATION
dens$SOLAR <- attrib$SOLAR
# removing unburned sites
dens <- dens[dens$TREAT !=0,]
dens$TREAT <- as.factor(dens$TREAT)
# pulling in site attribute variables
attrib <- read.csv(here("data/site_attrib.csv"))
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0)) # adds zero-counts back in for species
# adding divisions back in
dens$DIV <- NA
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
dens$DIV <- as.factor(dens$DIV)
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>% # 7 species at each plot, so each plot is 7 rows
ungroup()
dens$EXP_FACT <- test$EXP_FACT # adding expansion factors back in
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
rm(test, dbh)
seed <- read.csv(here("data/seedling_count_raw.csv"))
# adding expansion factors
seed$EXP_FACT <- NA
seed$EXP_FACT[seed$M2 == 100] <- 100
seed$EXP_FACT[seed$M2 == 10] <- 1000
seed$EXP_FACT[seed$M2 == 20] <- 500
seed$EXP_FACT[seed$M2 == 9] <- (10000/9)
# scaling up
seed$COUNT_ha <- seed$EXP_FACT * seed$TOTAL_COUNT
# combining seedling and dbh
seed <- seed %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) # arranges species in the same order within plots
# also orders plots in same order within sites
# need to do to combine with dbh in a sec
# creating PIGL rows
# no white spruce at dbh height on plots, but need to add to combine with seedling file
test <- dens %>%
dplyr::select(SITE, TREAT, PLOT, EXP_FACT) %>% # need the dplyr because MASS package conflicts with select()
distinct() # creates file where each row is a plot, maintains expansion factors/site/treat
test$SPP <- as.factor("PIGL") # adds species
test$COUNT_ha <- 0 # adds zero count
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test) # puts back into dbh file
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>% # same function as above # specifies order of species
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha,
TREE_EXP_FACT = EXP_FACT) # renames tree counts so we can combine with seedling
# combining files
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
dens$SEED_COUNT_HA <- seed$COUNT_ha
dens$SEED_EXP_FACT <- seed$EXP_FACT
# making sure number of fires is a factor
dens$TREAT <- as.factor(dens$TREAT)
# creating total count of both trees and seedlings
dens$COUNT_HA <- dens$TREE_COUNT_HA + dens$SEED_COUNT_HA
#  write.csv(dens, here("data/density.csv"), row.names = F)
rm(test, seed)
# removing unburned sites
dens <- dens[dens$TREAT !=0,]
dens$TREAT <- as.factor(dens$TREAT)
# looking at format of data, first three rows
dens[1:3,]
# pulling in site attribute variables
attrib <- read.csv(here("data/site_attrib.csv"))
# no unburned sites used here
attrib <-attrib[attrib$TREAT != 0,]
# getting order of sites in dens
order <- as.vector(unique(dens$PLOT)) # don't worry that its 42, remember this doesn't include unburned sites
attrib <- attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>% # matches the same order of plots as density file
slice(rep(1:n(), each = 8)) # replicates each value by 8, since there's 8 rows per plot (8 species)
# adding in attributes to density file
dens$SLOPE <- attrib$SLOPE
dens$ELEV <- attrib$ELEVATION
dens$SOLAR <- attrib$SOLAR
rm(attrib)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha)) %>%
ungroup() %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_ha))
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA)) %>%
ungroup() %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA), SLOPE = max(SLOPE), ELEV = max(ELEV))
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA), SLOPE = mean(SLOPE), ELEV = mean(ELEV))
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA), .groups = KEEP)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_ha = sum(COUNT_HA), .groups = "keep")
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
mutate(COUNT_ha = sum(COUNT_HA)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
mutate(COUNT_ha = sum(COUNT_HA)) %>%
dplyr::select(SITE, TREAT, PLOT, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
mutate(COUNT_ha = sum(COUNT_HA)) %>%
dplyr::select(SITE, TREAT, PLOT, DIV, COUNT_ha, SLOPE, ELEV, SOLAR)
test <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
mutate(COUNT_ha = sum(COUNT_HA)) %>%
ungroup() %>%
dplyr::select(SITE, TREAT, PLOT, DIV, COUNT_ha, SLOPE, ELEV, SOLAR)

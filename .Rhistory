dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7))
dens$EXP_FACT <- test$EXP_FACT
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
dens$DIV <- as.factor(dens$DIV)
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>%
ungroup()
View(test)
dens$EXP_FACT <- test$EXP_FACT
dens$EXP_FACT <- test$EXP_FACT
seed <- read.csv(here("data/seedling_count_raw.csv"))
# adding expansion factors
seed$EXP_FACT <- NA
seed$EXP_FACT[seed$M2 == 100] <- 100
seed$EXP_FACT[seed$M2 == 10] <- 1000
seed$EXP_FACT[seed$M2 == 20] <- 500
seed$EXP_FACT[seed$M2 == 9] <- (10000/9)
# scaling up
seed$COUNT_ha <- seed$EXP_FACT * seed$TOTAL_COUNT
# combining seedling and dbh
seed <- seed %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T)
# creating PIGL rows
test <- dens %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
distinct()
test$SPP <- as.factor("PIGL")
test$COUNT_ha <- 0
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test)
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha)
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
comparedf(seed,dens)
comparedf(seed,dens, by.x = PLOT)
comparedf(seed,dens, by.x = SITE)
comparedf(seed,dens, by.x = DALTON)
comparedf(seed,dens, by.x = row.names())
summary(comparedf(seed, dens))
comparedf(seed, dens)
summary(comparedf(seed, dens))
comparedf(seed, dens, by = "id")
comparedf(seed, dens, by = "SITE")
summary(comparedf(seed, dens, by = "SITE"))
View(seed)
View(dens)
dbh <- read.csv(here("data/dbh_raw.csv"))
View(dbh)
# merging salix
dbh$SPP[dbh$SPP == "SAGL"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_3"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_4"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_5"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_6"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_7"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_8"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_?"] <- "SALIX"
dbh$SPP[dbh$SPP == "SADE"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAPU"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dbh <- dbh %>%
filter(SPP != "UNKNOWN")
# adding conifer and deciduous divisons
dbh$DIV[dbh$SPP == "PIME"] <- "c"
dbh$DIV[dbh$SPP == "BENE"] <- "d"
dbh$DIV[dbh$SPP == "POTR"] <- "d"
dbh$DIV[dbh$SPP == "POBA"] <- "d"
dbh$DIV[dbh$SPP == "SALIX"] <- "d"
dbh$DIV[dbh$SPP == "ARCTO"] <- "d"
dbh$DIV[dbh$SPP == "ALCR"] <- "d"
# adding expansion factors
# assuming a plot is 1/25 of a ha, so half a plot is 1/50 of a ha.
dbh$EXP_FACT[dbh$QUAD == 2] <- 50
dbh$EXP_FACT[dbh$QUAD == 1] <- 100
dbh$EXP_FACT[dbh$QUAD == .1] <- 1000
dbh$EXP_FACT[dbh$QUAD == .2] <- 500
write.csv(dbh, here("data/dbh.csv"), row.names = F)
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0))
# adding divisions back in
dens$DIV <- NA
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>%
ungroup()
dens$EXP_FACT <- test$EXP_FACT
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
dens$DIV <- as.factor(dens$DIV)
seed <- read.csv(here("data/seedling_count_raw.csv"))
# adding expansion factors
seed$EXP_FACT <- NA
seed$EXP_FACT[seed$M2 == 100] <- 100
seed$EXP_FACT[seed$M2 == 10] <- 1000
seed$EXP_FACT[seed$M2 == 20] <- 500
seed$EXP_FACT[seed$M2 == 9] <- (10000/9)
# scaling up
seed$COUNT_ha <- seed$EXP_FACT * seed$TOTAL_COUNT
# combining seedling and dbh
seed <- seed %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T)
# creating PIGL rows
test <- dens %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
distinct()
test$SPP <- as.factor("PIGL")
test$COUNT_ha <- 0
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test)
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha)
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
View(dens)
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0))
# adding divisions back in
dens$DIV <- NA
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>%
ungroup()
dens$EXP_FACT <- test$EXP_FACT
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
dens$DIV <- as.factor(dens$DIV)
seed <- read.csv(here("data/seedling_count_raw.csv"))
# adding expansion factors
seed$EXP_FACT <- NA
seed$EXP_FACT[seed$M2 == 100] <- 100
seed$EXP_FACT[seed$M2 == 10] <- 1000
seed$EXP_FACT[seed$M2 == 20] <- 500
seed$EXP_FACT[seed$M2 == 9] <- (10000/9)
# scaling up
seed$COUNT_ha <- seed$EXP_FACT * seed$TOTAL_COUNT
# combining seedling and dbh
seed <- seed %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T)
# creating PIGL rows
test <- dens %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
distinct()
test$SPP <- as.factor("PIGL")
test$COUNT_ha <- 0
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test)
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha)
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0))
# adding divisions back in
dens$DIV <- NA
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>%
ungroup()
dens$EXP_FACT <- test$EXP_FACT
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
dens$DIV <- as.factor(dens$DIV)
seed <- read.csv(here("data/seedling_count_raw.csv"))
# adding expansion factors
seed$EXP_FACT <- NA
seed$EXP_FACT[seed$M2 == 100] <- 100
seed$EXP_FACT[seed$M2 == 10] <- 1000
seed$EXP_FACT[seed$M2 == 20] <- 500
seed$EXP_FACT[seed$M2 == 9] <- (10000/9)
# scaling up
seed$COUNT_ha <- seed$EXP_FACT * seed$TOTAL_COUNT
# combining seedling and dbh
seed <- seed %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T)
# creating PIGL rows
test <- dens %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
distinct()
test$SPP <- as.factor("PIGL")
test$COUNT_ha <- 0
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test)
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha)
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
View(dens)
dbh <- read.csv(here("data/dbh_raw.csv"))
# merging salix
dbh$SPP[dbh$SPP == "SAGL"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_3"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_4"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_5"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_6"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_7"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_8"] <- "SALIX"
dbh$SPP[dbh$SPP == "SA_?"] <- "SALIX"
dbh$SPP[dbh$SPP == "SADE"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAPU"] <- "SALIX"
dbh$SPP[dbh$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dbh <- dbh %>%
filter(SPP != "UNKNOWN")
# adding conifer and deciduous divisons
dbh$DIV[dbh$SPP == "PIME"] <- "c"
dbh$DIV[dbh$SPP == "BENE"] <- "d"
dbh$DIV[dbh$SPP == "POTR"] <- "d"
dbh$DIV[dbh$SPP == "POBA"] <- "d"
dbh$DIV[dbh$SPP == "SALIX"] <- "d"
dbh$DIV[dbh$SPP == "ARCTO"] <- "d"
dbh$DIV[dbh$SPP == "ALCR"] <- "d"
# adding expansion factors
# assuming a plot is 1/25 of a ha, so half a plot is 1/50 of a ha.
dbh$EXP_FACT[dbh$QUAD == 2] <- 50
dbh$EXP_FACT[dbh$QUAD == 1] <- 100
dbh$EXP_FACT[dbh$QUAD == .1] <- 1000
dbh$EXP_FACT[dbh$QUAD == .2] <- 500
write.csv(dbh, here("data/dbh.csv"), row.names = F)
dbh <- read.csv(here("data/dbh.csv"))
dbh$TREAT <- as.factor(dbh$TREAT)
# dropping dead trees
dbh <- dbh %>%
filter(CANOPY > 0)
# summing according to species
dens <- dbh %>%
group_by(SITE, TREAT, PLOT, SPP) %>%
summarise(COUNT_PLOT = n()) %>%
ungroup() %>%
group_by(SITE, TREAT,PLOT) %>%
complete( SPP, fill = list(COUNT_PLOT = 0))
# adding divisions back in
dens$DIV <- NA
dens$DIV[dens$SPP == "PIME"] <- "c"
dens$DIV[dens$SPP == "BENE"] <- "d"
dens$DIV[dens$SPP == "POTR"] <- "d"
dens$DIV[dens$SPP == "POBA"] <- "d"
dens$DIV[dens$SPP == "SALIX"] <- "d"
dens$DIV[dens$SPP == "ARCTO"] <- "d"
dens$DIV[dens$SPP == "ALCR"] <- "d"
# adding expansion factor back
test <- dbh %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(EXP_FACT = max(EXP_FACT)) %>%
slice(rep(1:n(), each = 7)) %>%
ungroup()
dens$EXP_FACT <- test$EXP_FACT
# scaling up
dens$COUNT_ha <- dens$COUNT_PLOT * dens$EXP_FACT
dens$DIV <- as.factor(dens$DIV)
detach("package:arsenal", unload = TRUE)
seed <- read.csv(here("data/seedling_count_raw.csv"))
# adding expansion factors
seed$EXP_FACT <- NA
seed$EXP_FACT[seed$M2 == 100] <- 100
seed$EXP_FACT[seed$M2 == 10] <- 1000
seed$EXP_FACT[seed$M2 == 20] <- 500
seed$EXP_FACT[seed$M2 == 9] <- (10000/9)
# scaling up
seed$COUNT_ha <- seed$EXP_FACT * seed$TOTAL_COUNT
# combining seedling and dbh
seed <- seed %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T)
# creating PIGL rows
test <- dens %>%
select(SITE, TREAT, PLOT, EXP_FACT) %>%
distinct()
test$SPP <- as.factor("PIGL")
test$COUNT_ha <- 0
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test)
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha)
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
dens$SEED_COUNT_HA <- seed$COUNT_ha
dens$SEED_EXP_FACT <- seed$EXP_FACT
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>%
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha,
TREE_EXP_FACT = EXP_FACT)
View(dens)
write.csv(dens, here("data/density.csv"), row.names = F)
dens <- read.csv(here("data/density.csv"))
#Different way of subsetting, base R
CONIF_dens <- subset(dens, dens$DIV == "c")
#the plots are duplicated with one entry per conifer species, so this reduces it to one value per plot
cnt <- aggregate(CONIF_dens$COUNT_HA, list(CONIF_dens$PLOT), FUN = sum)  	#adds up the count per ha for each row within a plot
# creating count of both trees and seedlings
dens$COUNT_HA <- dens$TREE_COUNT_HA + dens$SEED_COUNT_HA
#Different way of subsetting, base R
CONIF_dens <- subset(dens, dens$DIV == "c")
library(sjPlot)
library(MASS)
library(parameters)
library(logNormReg)
#the plots are duplicated with one entry per conifer species, so this reduces it to one value per plot
cnt <- aggregate(CONIF_dens$COUNT_HA, list(CONIF_dens$PLOT), FUN = sum)  	#adds up the count per ha for each row within a plot
trt <- aggregate(CONIF_dens$TREAT, list(CONIF_dens$PLOT), FUN = mean)	#gets the treatment number (mean works because they are the same
CONIF_dens_new <- cbind(cnt, trt[,2])						#combines
temp <- merge(x=CONIF_dens_new, y=CONIF_dens, by.x="Group.1", by.y="PLOT", all.x=F, all.y=F)	#adding in the site in a clumsy way but it was quick
CONIF_dens_new <- temp[duplicated(temp[,1]),]					#merging and removing
CONIF_dens_new <- CONIF_dens_new[,1:4]						#remove extra columns
names(CONIF_dens_new) <- c("PLOT","COUNT","TREAT", "SITE")			#get names back in there
CONIF_dens <- CONIF_dens_new								#back to original name so code below works
hist(CONIF_dens$COUNT)									#check
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
mC_D    <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
mC_D_qp <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson(link = "log"), data = CONIF_dens)
mC_D_qp <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson(link = "log"), data = CONIF_dens)
mC_D    <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
View(CONIF_dens)
View(CONIF_dens_new)
# removing unburned sites
dens <- dens[dens$TREAT !=0,]
# looking at format of data, first three rows
dens[1:3,]
# creating count of both trees and seedlings
dens$COUNT_HA <- dens$TREE_COUNT_HA + dens$SEED_COUNT_HA
#Different way of subsetting, base R
CONIF_dens <- subset(dens, dens$DIV == "c")
#the plots are duplicated with one entry per conifer species, so this reduces it to one value per plot
cnt <- aggregate(CONIF_dens$COUNT_HA, list(CONIF_dens$PLOT), FUN = sum)  	#adds up the count per ha for each row within a plot
trt <- aggregate(CONIF_dens$TREAT, list(CONIF_dens$PLOT), FUN = mean)	#gets the treatment number (mean works because they are the same
CONIF_dens_new <- cbind(cnt, trt[,2])						#combines
par(mfrow=c(3,4))
plot(mC_D, main="Poisson")
plot(mC_D_qp, main="Quasi-poisson")
plot(mC_D.nb, main="NB")
# parameters
summary(mC_D)
summary(mC_D_qp)
summary(mC_D.nb)
model_parameters(mC_D.nb)
attrib <- read.csv(here("data/site_attrib_expand.csv"))
attrib %>%
group_by(SITE, TREAT, PLOT)
View(attrib)
attrib <- read.csv(here("data/site_attrib_expand.csv"))
attrib %>%
group_by(SITE, TREAT, PLOT)
attrib %>%
group_by(SITE, TREAT, PLOT) %>%
distinct()
attrib <- attrib %>%
group_by(SITE, TREAT, PLOT) %>%
distinct()
View(attrib)
write.csv(attrib, here("data/site_attrib.csv"), row.names = F)
# pulling in site attribute variables
attrib <- read.csv(here("data/site_attrib.csv"))
# getting order of sites in dens
order <- as.vector(unique(dens$PLOT))
length(order)
# getting order of sites in dens
unique(dens$PLOT)
# getting order of sites in dens
as.vector(unique(dens$PLOT))
attrib %>%
arrange(PLOT, match(order))
attrib %>%
arrange(match(PLOT,order))
View(dbh)
View(dens)
unique(dens$SPP)
length(unique(dens$SPP))
attrib %>%
arrange(match(PLOT,order)) %>%
splice(rep(1:n(), each = 8))
attrib %>%
arrange(match(PLOT,order)) %>%
splice(rep(1:n(), each = 8))
attrib %>%
group_by(SITE, TREAT)
attrib %>%
group_by(SITE, TREAT)
arrange(match(PLOT,order)) %>%
splice(rep(1:n(), each = 8))
attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>%
splice(rep(1:n(), each = 8))
conflicts()
attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>%
purr :: splice(rep(1:n(), each = 8))
attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>%
puur :: splice(rep(1:n(), each = 8))
attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>%
slice(rep(1:n(), each = 8))
# no unburned
attrib <-attrib[attrib$TREAT != 0,]
# getting order of sites in dens
order <- as.vector(unique(dens$PLOT)) # don't worry that its 42, remember this doesnt include unburned
attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>%
slice(rep(1:n(), each = 8))
dens$SLOPE <- attrib$SLOPE
dens$ELEV <- attrib$ELEVATION
dens$SOLAR <- dens$SOLAR
View(dens)
dens$SOLAR <- dens$SOLAR
View(dens)
dens$SOLAR <- attrib$SOLAR
write.csv(dens, here("data/density.csv"), row.names = F)
dens <- read.csv(here("data/density.csv"))
```{r analysis, distribution}
dens <- read.csv(here("data/density.csv"))
```{r analysis / distribution,}
dens <- read.csv(here("data/density.csv"))

unique(dalton$PLOT[dalton$QUAD == 0.1]) # 15_3 12_1 50_1
dalton$BA[dalton$PLOT == "15_3"] <- dalton$BA[dalton$PLOT == "15_3"]*20
dalton$BA[dalton$PLOT == "12_1"] <- dalton$BA[dalton$PLOT == "12_1"]*20
dalton$BA[dalton$PLOT == "50_1"] <- dalton$BA[dalton$PLOT == "50_1"]*20
# summing according to species
dalton_ba <- dalton %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(BA_SUM = sum(BA))
steese <- read.csv(here("data/Steese_DBH.csv"), stringsAsFactors = F)
# merging salix
steese$SPP[steese$SPP == "SAGL"] <- "SALIX"
steese$SPP[steese$SPP == "SA_4"] <- "SALIX"
steese$SPP[steese$SPP == "SA_5"] <- "SALIX"
steese$SPP[steese$SPP == "SA_6"] <- "SALIX"
steese$SPP[steese$SPP == "SA_7"] <- "SALIX"
steese$SPP[steese$SPP == "SADE"] <- "SALIX"
# adding conifer and deciduous divisons
steese$DIV[steese$SPP == "PIME"] <- "c"
steese$DIV[steese$SPP == "BENE"] <- "d"
steese$DIV[steese$SPP == "POTR"] <- "d"
steese$DIV[steese$SPP == "POBA"] <- "d"
steese$DIV[steese$SPP == "SALIX"] <- "d"
steese$DIV[steese$SPP == "ARCTO"] <- "d"
steese$DIV[steese$SPP == "ALCR"] <- "d"
# dropping dead trees
steese <- steese %>%
filter(CANOPY > 0)
# calculating ba
steese$BA_unscale <- 0.005454*(steese$DBH^2)
# scaling ba
steese$BA <- steese$BA_unscale
unique(steese$PLOT[steese$QUAD ==1]) # "33_1" "18_1" "4_2"  "19_2" "28_1" "1_0"  "31_0" "6_0"  "9_0"
steese$BA[steese$PLOT == "33_1"] <- steese$BA[steese$PLOT == "33_1"]*2
steese$BA[steese$PLOT == "18_1"] <- steese$BA[steese$PLOT == "18_1"]*2
steese$BA[steese$PLOT == "4_2"] <- steese$BA[steese$PLOT == "4_2"]*2
steese$BA[steese$PLOT == "19_2"] <- steese$BA[steese$PLOT == "19_2"]*2
steese$BA[steese$PLOT == "28_1"] <- steese$BA[steese$PLOT == "28_1"]*2
steese$BA[steese$PLOT == "6_0"] <- steese$BA[steese$PLOT == "6_0"]*2
steese$BA[steese$PLOT == "1_0"] <- steese$BA[steese$PLOT == "1_0"]*2
steese$BA[steese$PLOT == "31_0"] <- steese$BA[steese$PLOT == "31_0"]*2
steese$BA[steese$PLOT == "9_0"] <- steese$BA[steese$PLOT == "9_0"]*2
# summing according to species
steese_ba <- steese %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(BA_SUM = sum(BA))
species_ba <- rbind(dalton_ba, steese_ba)
species_ba$BA_HA <- species_ba$BA_SUM*50
species_ba$BA_PLOT <- species_ba$BA_SUM + species_ba$BA_SUM
write.csv(species_ba, "species_ba.csv", row.names = F)
# also writing full data file for modeling
ba <- rbind(dalton, steese)
write.csv(ba, "ba.csv", row.names = F)
# bringing in data
ba <- read.csv(here("ba.csv"), stringsAsFactors = F)
# removing unburned sites
ba <- ba[ba$TREAT != 0,]
# looking at format of data, first three rows
ba[1:3,]
ba$BA_ha <- ba$BA * 50
DECID_BA <- ba %>%
filter(DIV == "d") %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(BA = sum(BA_ha)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, fill = list(BA = 0))
hist(DECID_BA$BA)
DECID_BA[DECID_BA$BA > 400,]
View(ba)
dalton <- read.csv(here("data/Dalton_DBH.csv"), stringsAsFactors = F)
# merging salix
dalton$SPP[dalton$SPP == "SAGL"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_3"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_4"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_5"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_6"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_7"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_8"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_?"] <- "SALIX"
dalton$SPP[dalton$SPP == "SADE"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAPU"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dalton <- dalton %>%
filter(SPP != "UNKNOWN")
# dropping dead trees
dalton <- dalton %>%
filter(CANOPY > 0)
# adding conifer and deciduous divisons
dalton$DIV[dalton$SPP == "PIME"] <- "c"
dalton$DIV[dalton$SPP == "BENE"] <- "d"
dalton$DIV[dalton$SPP == "POTR"] <- "d"
dalton$DIV[dalton$SPP == "SALIX"] <- "d"
dalton$DIV[dalton$SPP == "ARCTO"] <- "d"
dalton$DIV[dalton$SPP == "ALCR"] <- "d"
dalton$BA_unscale <- 0.005454*(dalton$DBH^2)
# scaling ba
dalton$BA <- dalton$BA_unscale
unique(dalton$PLOT[dalton$QUAD ==1]) # 44_0 28_1
dalton$BA[dalton$PLOT == "28_1"] <- dalton$BA[dalton$PLOT == "28_1"]*2
dalton$BA[dalton$PLOT == "44_0"] <- dalton$BA[dalton$PLOT == "44_0"]*2
unique(dalton$PLOT[dalton$QUAD == 0.2]) # 15_3
dalton$BA[dalton$PLOT == "15_3"] <- dalton$BA[dalton$PLOT == "15_3"]*10
unique(dalton$PLOT[dalton$QUAD == 0.1]) # 15_3 12_1 50_1
dalton$BA[dalton$PLOT == "12_1"] <- dalton$BA[dalton$PLOT == "12_1"]*20
dalton$BA[dalton$PLOT == "50_1"] <- dalton$BA[dalton$PLOT == "50_1"]*20
# summing according to species
dalton_ba <- dalton %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(BA_SUM = sum(BA))
steese <- read.csv(here("data/Steese_DBH.csv"), stringsAsFactors = F)
# merging salix
steese$SPP[steese$SPP == "SAGL"] <- "SALIX"
steese$SPP[steese$SPP == "SA_4"] <- "SALIX"
steese$SPP[steese$SPP == "SA_5"] <- "SALIX"
steese$SPP[steese$SPP == "SA_6"] <- "SALIX"
steese$SPP[steese$SPP == "SA_7"] <- "SALIX"
steese$SPP[steese$SPP == "SADE"] <- "SALIX"
# adding conifer and deciduous divisons
steese$DIV[steese$SPP == "PIME"] <- "c"
steese$DIV[steese$SPP == "BENE"] <- "d"
steese$DIV[steese$SPP == "POTR"] <- "d"
steese$DIV[steese$SPP == "POBA"] <- "d"
steese$DIV[steese$SPP == "SALIX"] <- "d"
steese$DIV[steese$SPP == "ARCTO"] <- "d"
steese$DIV[steese$SPP == "ALCR"] <- "d"
# dropping dead trees
steese <- steese %>%
filter(CANOPY > 0)
# calculating ba
steese$BA_unscale <- 0.005454*(steese$DBH^2)
# scaling ba
steese$BA <- steese$BA_unscale
unique(steese$PLOT[steese$QUAD ==1]) # "33_1" "18_1" "4_2"  "19_2" "28_1" "1_0"  "31_0" "6_0"  "9_0"
steese$BA[steese$PLOT == "33_1"] <- steese$BA[steese$PLOT == "33_1"]*2
steese$BA[steese$PLOT == "18_1"] <- steese$BA[steese$PLOT == "18_1"]*2
steese$BA[steese$PLOT == "4_2"] <- steese$BA[steese$PLOT == "4_2"]*2
steese$BA[steese$PLOT == "19_2"] <- steese$BA[steese$PLOT == "19_2"]*2
steese$BA[steese$PLOT == "28_1"] <- steese$BA[steese$PLOT == "28_1"]*2
steese$BA[steese$PLOT == "6_0"] <- steese$BA[steese$PLOT == "6_0"]*2
steese$BA[steese$PLOT == "1_0"] <- steese$BA[steese$PLOT == "1_0"]*2
steese$BA[steese$PLOT == "31_0"] <- steese$BA[steese$PLOT == "31_0"]*2
steese$BA[steese$PLOT == "9_0"] <- steese$BA[steese$PLOT == "9_0"]*2
# summing according to species
steese_ba <- steese %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(BA_SUM = sum(BA))
species_ba <- rbind(dalton_ba, steese_ba)
species_ba$BA_HA <- species_ba$BA_SUM*50
species_ba$BA_PLOT <- species_ba$BA_SUM + species_ba$BA_SUM
write.csv(species_ba, "species_ba.csv", row.names = F)
# also writing full data file for modeling
ba <- rbind(dalton, steese)
write.csv(ba, "ba.csv", row.names = F)
# bringing in data
ba <- read.csv(here("ba.csv"), stringsAsFactors = F)
# removing unburned sites
ba <- ba[ba$TREAT != 0,]
# looking at format of data, first three rows
ba[1:3,]
ba$BA_ha <- ba$BA * 50
DECID_BA <- ba %>%
filter(DIV == "d") %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(BA = sum(BA_ha)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, fill = list(BA = 0))
hist(DECID_BA$BA)
DECID_BA[DECID_BA$BA > 300,]
mD_BA.ga <- glm(BA  ~ TREAT + SITE + (TREAT*SITE), family = gaussian(link = "identity"), data = DECID_BA)
plot(mD_BA.ga, main="Guassian")
summary(mD_BA.ga); # model_parameters(mD_BA)
mD_BA.ig <- glm(BA  ~ TREAT + SITE + (TREAT*SITE), family = inverse.gaussian(link = "1/mu^2"), data = DECID_BA)
mC_BA <- lm(log(BA_sum + 1) ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA <- lm(BA_sum) ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
ba <- read.csv(here("ba.csv"), stringsAsFactors = F)
# removing unburned sites
ba <- ba[ba$TREAT != 0,]
# looking at format of data, first three rows
ba[1:3,]
ba$BA_ha <- ba$BA * 50
#####################################################
## conifer basal area
##
CONIF_BA <- ba %>%
filter(DIV == "c") %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(BA = sum(BA_ha)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, fill = list(BA = 0))
plot(test$TREAT,test$BA)
#####################################################
## conifer basal area
##
CONIF_BA <- ba %>%
filter(DIV == "c") %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(BA = sum(BA_ha)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, fill = list(BA = 0))
mC_BA <- lm(BA_sum) ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA <- lm(BA_sum ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA <- lm(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
# residuals
plot(mC_BA)
hist(CONIF_BA$BA)
CONIF_BA[CONIF_BA$BA > 100,]
mC_BA.lm <- lm(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA.log <- lm(log(BA + 1) ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA.ga <- glm(BA ~ TREAT + SITE + (TREAT*SITE), family = gaussian(link = "identity"), data = CONIF_BA)
mC_BA.lm <- lm(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA.log <- lm(log(BA + 1) ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA.ga <- glm(BA ~ TREAT + SITE + (TREAT*SITE), family = gaussian(link = "identity"), data = CONIF_BA)
# residuals
par(mfrow=c(3,4))
plot(mC_BA.lm, main = "Linear")
plot(mC_BA.log, main = "logged")
plot(mC_BA.ga, main = "Gaussian")
CONIF_BA <- ba %>%
filter(DIV == "c") %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(BA = sum(BA_ha)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, fill = list(BA = 0))
hist(CONIF_BA$BA)
CONIF_BA[CONIF_BA$BA > 100,] # checking high value
mC_BA.lm <- lm(BA ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA.log <- lm(log(BA + 1) ~ TREAT + SITE + (TREAT*SITE), data = CONIF_BA)
mC_BA.ga <- glm(BA ~ TREAT + SITE + (TREAT*SITE), family = gaussian(link = "identity"), data = CONIF_BA)
# residuals
par(mfrow=c(3,4))
plot(mC_BA.lm, main = "Linear")
plot(mC_BA.log, main = "logged")
plot(mC_BA.ga, main = "Gaussian")
DECID_BA <- ba %>%
filter(DIV == "d") %>%
group_by(SITE, TREAT, PLOT) %>%
summarise(BA = sum(BA_ha)) %>%
ungroup() %>%
complete(SITE, TREAT, PLOT, fill = list(BA = 0))
hist(DECID_BA$BA)
mD_BA.lm <- lm(BA  ~ TREAT + SITE + (TREAT*SITE), data = DECID_BA)
mD_BA.log <- lm(log(BA+1)  ~ TREAT + SITE + (TREAT*SITE), data = DECID_BA)
mD_BA.ga <- glm(BA  ~ TREAT + SITE + (TREAT*SITE), family = gaussian(link = "identity"), data = DECID_BA)
par(mfrow=c(2,4))
plot(mD_BA.lm, main="Linear")
plot(mD_BA.log, main= "Logged")
plot(mD_BA.ga, main="Guassian")
par(mfrow=c(3,4))
plot(mD_BA.lm, main="Linear")
plot(mD_BA.log, main= "Logged")
plot(mD_BA.ga, main="Guassian")
# parameters
summary(mD_BA.lm); # model_parameters(mD_BA)
summary(mD_BA.log)
summary(mD_BA.ga)
# density
library(tidyverse)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
dalton <- read.csv(here("data/dalton_DBH.csv"))
# merging salix
dalton$SPP[dalton$SPP == "SAGL"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_3"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_4"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_5"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_6"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_7"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_8"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_?"] <- "SALIX"
dalton$SPP[dalton$SPP == "SADE"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAPU"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dalton <- dalton %>%
filter(SPP != "UNKNOWN")
# dropping dead trees
dalton <- dalton %>%
filter(CANOPY > 0)
# adding conifer and deciduous divisons
dalton$DIV[dalton$SPP == "PIME"] <- "c"
dalton$DIV[dalton$SPP == "BENE"] <- "d"
dalton$DIV[dalton$SPP == "POTR"] <- "d"
dalton$DIV[dalton$SPP == "SALIX"] <- "d"
dalton$DIV[dalton$SPP == "ARCTO"] <- "d"
dalton$DIV[dalton$SPP == "ALCR"] <- "d"
# summing according to species
dalton_dens <- dalton %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
dalton_dens$COUNT <- dalton_dens$COUNT_unscale
unique(dalton$PLOT[dalton$QUAD ==1]) # 44_0 28_1
dalton_dens$COUNT[dalton_dens$PLOT == "28_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "28_1"]*2
dalton_dens$COUNT[dalton_dens$PLOT == "44_0"] <- dalton_dens$COUNT[dalton_dens$PLOT == "44_0"]*2
unique(dalton$PLOT[dalton$QUAD == 0.1]) # 15_3 12_1 50_1
dalton_dens$COUNT[dalton_dens$PLOT == "15_3"] <- dalton_dens$COUNT[dalton_dens$PLOT == "15_3"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "12_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "12_1"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "50_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "50_1"]*20
dalton_dens <- dalton_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
steese <- read.csv(here("data/Steese_DBH.csv"), stringsAsFactors = F)
# merging salix
steese$SPP[steese$SPP == "SAGL"] <- "SALIX"
steese$SPP[steese$SPP == "SA_4"] <- "SALIX"
steese$SPP[steese$SPP == "SA_5"] <- "SALIX"
steese$SPP[steese$SPP == "SA_6"] <- "SALIX"
steese$SPP[steese$SPP == "SA_7"] <- "SALIX"
steese$SPP[steese$SPP == "SADE"] <- "SALIX"
# adding conifer and deciduous divisons
steese$DIV[steese$SPP == "PIME"] <- "c"
steese$DIV[steese$SPP == "BENE"] <- "d"
steese$DIV[steese$SPP == "POTR"] <- "d"
steese$DIV[steese$SPP == "POBA"] <- "d"
steese$DIV[steese$SPP == "SALIX"] <- "d"
steese$DIV[steese$SPP == "ARCTO"] <- "d"
steese$DIV[steese$SPP == "ALCR"] <- "d"
# dropping dead trees
steese <- steese %>%
filter(CANOPY > 0)
# summing according to species
steese_dens <- steese %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
# scaling up
steese_dens$COUNT <- steese_dens$COUNT_unscale
unique(steese$PLOT[steese$QUAD ==1]) # "33_1" "18_1" "4_2"  "19_2" "28_1" "1_0"  "31_0" "6_0"  "9_0"
steese_dens$COUNT[steese_dens$PLOT == "33_1"] <- steese_dens$COUNT[steese_dens$PLOT == "33_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "18_1"] <- steese_dens$COUNT[steese_dens$PLOT == "18_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "4_2"] <- steese_dens$COUNT[steese_dens$PLOT == "4_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "19_2"] <- steese_dens$COUNT[steese_dens$PLOT == "19_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "28_1"] <- steese_dens$COUNT[steese_dens$PLOT == "28_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "6_0"] <- steese_dens$COUNT[steese_dens$PLOT == "6_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "1_0"] <- steese_dens$COUNT[steese_dens$PLOT == "1_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "31_0"] <- steese_dens$COUNT[steese_dens$PLOT == "31_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "9_0"] <- steese_dens$COUNT[steese_dens$PLOT == "9_0"]*2
steese_dens <- steese_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
seedling <- read.csv(here("seedling_Density.csv"))
seedling$COUNT <- seedling$SPP_COUNT_PLOT*2
seedling <- seedling %>%
select(SITE, PLOT, TREAT, DIVISION, SPP, COUNT) %>%
rename("DIV" = "DIVISION")
dalt_seed_dens <- bind_rows(dalton_dens, steese_dens, seedling)
species_dens <- dalt_seed_dens %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = sum(COUNT))
species_dens$COUNT_HA <- species_dens$COUNT * 50
write.csv(species_dens,"species_dens.csv", row.names = F)
dalton <- read.csv(here("data/dalton_DBH.csv"))
# merging salix
dalton$SPP[dalton$SPP == "SAGL"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_3"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_4"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_5"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_6"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_7"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_8"] <- "SALIX"
dalton$SPP[dalton$SPP == "SA_?"] <- "SALIX"
dalton$SPP[dalton$SPP == "SADE"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAPU"] <- "SALIX"
dalton$SPP[dalton$SPP == "SAGL_R"] <- "SALIX"
# dropping unknown
dalton <- dalton %>%
filter(SPP != "UNKNOWN")
# dropping dead trees
dalton <- dalton %>%
filter(CANOPY > 0)
# adding conifer and deciduous divisons
dalton$DIV[dalton$SPP == "PIME"] <- "c"
dalton$DIV[dalton$SPP == "BENE"] <- "d"
dalton$DIV[dalton$SPP == "POTR"] <- "d"
dalton$DIV[dalton$SPP == "SALIX"] <- "d"
dalton$DIV[dalton$SPP == "ARCTO"] <- "d"
dalton$DIV[dalton$SPP == "ALCR"] <- "d"
# summing according to species
dalton_dens <- dalton %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
dalton_dens$COUNT <- dalton_dens$COUNT_unscale
unique(dalton$PLOT[dalton$QUAD ==1]) # 44_0 28_1
dalton_dens$COUNT[dalton_dens$PLOT == "28_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "28_1"]*2
dalton_dens$COUNT[dalton_dens$PLOT == "44_0"] <- dalton_dens$COUNT[dalton_dens$PLOT == "44_0"]*2
unique(dalton$PLOT[dalton$QUAD == 0.2]) # 15_3
dalton_dens$COUNT[dalton_dens$PLOT == "15_3"] <- dalton_dens$COUNT[dalton_dens$PLOT == "15_3"]*10
unique(dalton$PLOT[dalton$QUAD == 0.1]) # 15_3 12_1 50_1
dalton_dens$COUNT[dalton_dens$PLOT == "12_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "12_1"]*20
dalton_dens$COUNT[dalton_dens$PLOT == "50_1"] <- dalton_dens$COUNT[dalton_dens$PLOT == "50_1"]*20
dalton_dens <- dalton_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
steese <- read.csv(here("data/Steese_DBH.csv"), stringsAsFactors = F)
# merging salix
steese$SPP[steese$SPP == "SAGL"] <- "SALIX"
steese$SPP[steese$SPP == "SA_4"] <- "SALIX"
steese$SPP[steese$SPP == "SA_5"] <- "SALIX"
steese$SPP[steese$SPP == "SA_6"] <- "SALIX"
steese$SPP[steese$SPP == "SA_7"] <- "SALIX"
steese$SPP[steese$SPP == "SADE"] <- "SALIX"
# adding conifer and deciduous divisons
steese$DIV[steese$SPP == "PIME"] <- "c"
steese$DIV[steese$SPP == "BENE"] <- "d"
steese$DIV[steese$SPP == "POTR"] <- "d"
steese$DIV[steese$SPP == "POBA"] <- "d"
steese$DIV[steese$SPP == "SALIX"] <- "d"
steese$DIV[steese$SPP == "ARCTO"] <- "d"
steese$DIV[steese$SPP == "ALCR"] <- "d"
# dropping dead trees
steese <- steese %>%
filter(CANOPY > 0)
# summing according to species
steese_dens <- steese %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
tally() %>%
rename("COUNT_unscale" = "n")
# scaling up
steese_dens$COUNT <- steese_dens$COUNT_unscale
unique(steese$PLOT[steese$QUAD ==1]) # "33_1" "18_1" "4_2"  "19_2" "28_1" "1_0"  "31_0" "6_0"  "9_0"
steese_dens$COUNT[steese_dens$PLOT == "33_1"] <- steese_dens$COUNT[steese_dens$PLOT == "33_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "18_1"] <- steese_dens$COUNT[steese_dens$PLOT == "18_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "4_2"] <- steese_dens$COUNT[steese_dens$PLOT == "4_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "19_2"] <- steese_dens$COUNT[steese_dens$PLOT == "19_2"]*2
steese_dens$COUNT[steese_dens$PLOT == "28_1"] <- steese_dens$COUNT[steese_dens$PLOT == "28_1"]*2
steese_dens$COUNT[steese_dens$PLOT == "6_0"] <- steese_dens$COUNT[steese_dens$PLOT == "6_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "1_0"] <- steese_dens$COUNT[steese_dens$PLOT == "1_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "31_0"] <- steese_dens$COUNT[steese_dens$PLOT == "31_0"]*2
steese_dens$COUNT[steese_dens$PLOT == "9_0"] <- steese_dens$COUNT[steese_dens$PLOT == "9_0"]*2
steese_dens <- steese_dens %>%
select(SITE, PLOT, TREAT, DIV, SPP, COUNT)
seedling <- read.csv(here("seedling_Density.csv"))
seedling$COUNT <- seedling$SPP_COUNT_PLOT*2
seedling <- seedling %>%
select(SITE, PLOT, TREAT, DIVISION, SPP, COUNT) %>%
rename("DIV" = "DIVISION")
dalt_seed_dens <- bind_rows(dalton_dens, steese_dens, seedling)
species_dens <- dalt_seed_dens %>%
group_by(SITE, TREAT, PLOT, DIV, SPP) %>%
summarise(COUNT = sum(COUNT))
species_dens$COUNT_HA <- species_dens$COUNT * 50
write.csv(species_dens,"species_dens.csv", row.names = F)
# bringing in data
species_dens <- read.csv(("species_dens.csv"))
# removing unburned sites
species_dens <- species_dens[species_dens$TREAT !=0,]
# looking at format of data, first three rows
species_dens[1:3,]
#Different way of subsetting, base R
CONIF_dens <- subset(species_dens, species_dens$DIV == "c")
#the plots are duplicated with one entry per conifer species, so this reduces it to one value per plot
cnt <- aggregate(CONIF_dens$COUNT_HA, list(CONIF_dens$PLOT), FUN = sum)  	#adds up the count per ha for each row within a plot
trt <- aggregate(CONIF_dens$TREAT, list(CONIF_dens$PLOT), FUN = mean)	#gets the treatment number (mean works because they are the same
CONIF_dens_new <- cbind(cnt, trt[,2])						#combines
temp <- merge(x=CONIF_dens_new, y=CONIF_dens, by.x="Group.1", by.y="PLOT", all.x=F, all.y=F)	#adding in the site in a clumsy way but it was quick
CONIF_dens_new <- temp[duplicated(temp[,1]),]					#merging and removing
CONIF_dens_new <- CONIF_dens_new[,1:4]						#remove extra columns
names(CONIF_dens_new) <- c("PLOT","COUNT","TREAT", "SITE")			#get names back in there
CONIF_dens <- CONIF_dens_new								#back to original name so code below works
hist(CONIF_dens$COUNT)									#check
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
mC_D <- 		glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
mC_D_qp <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson(link = "log"), data = CONIF_dens)
# residuals
par(mfrow=c(3,4))
plot(mC_D, main="Poisson")
plot(mC_D_qp, main="Quasi-poisson")
plot(mC_D.nb, main="NB")
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
library(MASS)
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
par(mfrow=c(3,4))
plot(mC_D, main="Poisson")
plot(mC_D_qp, main="Quasi-poisson")
plot(mC_D.nb, main="NB")
summary(mC_D.nb)
library(tidyverse)
library(sjPlot)
library(MASS)
library(here)
library(parameters)
library(cowplot); theme_set(theme_cowplot())
################################################
##  density
# bringing in data
species_dens <- read.csv(("species_dens.csv"))
# removing unburned sites
species_dens <- species_dens[species_dens$TREAT !=0,]
# looking at format of data, first three rows
species_dens[1:3,]
#############################
## conifer density
#Different way of subsetting, base R
CONIF_dens <- subset(species_dens, species_dens$DIV == "c")
#the plots are duplicated with one entry per conifer species, so this reduces it to one value per plot
cnt <- aggregate(CONIF_dens$COUNT_HA, list(CONIF_dens$PLOT), FUN = sum)  	#adds up the count per ha for each row within a plot
trt <- aggregate(CONIF_dens$TREAT, list(CONIF_dens$PLOT), FUN = mean)	#gets the treatment number (mean works because they are the same
CONIF_dens_new <- cbind(cnt, trt[,2])						#combines
temp <- merge(x=CONIF_dens_new, y=CONIF_dens, by.x="Group.1", by.y="PLOT", all.x=F, all.y=F)	#adding in the site in a clumsy way but it was quick
CONIF_dens_new <- temp[duplicated(temp[,1]),]					#merging and removing
CONIF_dens_new <- CONIF_dens_new[,1:4]						#remove extra columns
names(CONIF_dens_new) <- c("PLOT","COUNT","TREAT", "SITE")			#get names back in there
CONIF_dens <- CONIF_dens_new								#back to original name so code below works
hist(CONIF_dens$COUNT)									#check
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
mC_D <- 		glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
mC_D_qp <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson(link = "log"), data = CONIF_dens)
# residuals
par(mfrow=c(3,4))
plot(mC_D, main="Poisson")
plot(mC_D_qp, main="Quasi-poisson")
plot(mC_D.nb, main="NB")

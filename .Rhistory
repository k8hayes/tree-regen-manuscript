test <- dens %>%
dplyr::select(SITE, TREAT, PLOT, EXP_FACT) %>% # need the dplyr because MASS package conflicts with select()
distinct() # creates file where each row is a plot, maintains expansion factors/site/treat
test$SPP <- as.factor("PIGL") # adds species
test$COUNT_ha <- 0 # adds zero count
test$COUNT_PLOT <- 0
test$DIV <- as.factor("c")
dens <- rbind(dens, test) # puts back into dbh file
dens <- dens %>%
group_by(SITE, TREAT, PLOT) %>% # same function as above # specifies order of species
arrange(match(SPP, c("ALCR", "ARCTO", "BENE", "POBA", "POTR", "SALIX", "PIGL", "PIME")),
.by_group = T) %>%
rename(TREE_COUNT_PLOT = COUNT_PLOT, TREE_COUNT_HA = COUNT_ha,
TREE_EXP_FACT = EXP_FACT) %>%
ungroup()# renames tree counts so we can combine with seedling
# combining files
dens$SEED_COUNT_PLOT <- seed$TOTAL_COUNT
dens$SEED_COUNT_HA <- seed$COUNT_ha
dens$SEED_EXP_FACT <- seed$EXP_FACT
# making sure number of fires is a factor
dens$TREAT <- as.factor(dens$TREAT)
# creating total count of both trees and seedlings
dens$COUNT_HA <- dens$TREE_COUNT_HA + dens$SEED_COUNT_HA
#  write.csv(dens, here("data/density.csv"), row.names = F)
rm(test, seed)
# removing unburned sites
dens <- dens[dens$TREAT !=0,]
dens$TREAT <- as.factor(dens$TREAT)
# looking at format of data, first three rows
dens[1:3,]
# pulling in site attribute variables
attrib <- read.csv(here("data/site_attrib.csv"))
# no unburned sites used here
attrib <-attrib[attrib$TREAT != 0,]
# getting order of sites in dens
order <- as.vector(unique(dens$PLOT)) # don't worry that its 42, remember this doesn't include unburned sites
attrib <- attrib %>%
group_by(SITE, TREAT) %>%
arrange(match(PLOT,order)) %>% # matches the same order of plots as density file
slice(rep(1:n(), each = 8)) # replicates each value by 8, since there's 8 rows per plot (8 species)
# adding in attributes to density file
dens$SLOPE <- attrib$SLOPE
dens$ELEV <- attrib$ELEVATION
dens$SOLAR <- attrib$SOLAR
rm(attrib)
dens$TREAT <- as.factor(dens$TREAT) # just to make sure
CONIF_dens <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT = sum(COUNT_HA), SLOPE = first(SLOPE)) %>%
ungroup() %>%
complete(nesting(SITE, TREAT, PLOT), DIV, fill = list(COUNT_HA = 0)) %>%
filter(DIV == "c")
CONIF_dens$TREAT <- as.factor(CONIF_dens$TREAT) #
CONIF_dens$TREAT <- as.factor(CONIF_dens$TREAT)
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
mC_D    <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = poisson(link = "log"), data = CONIF_dens)
mC_D_qp <- 	glm(COUNT ~ TREAT + SITE + (TREAT*SITE), family = quasipoisson(link = "log"), data = CONIF_dens)
# residuals
par(mfrow=c(3,4))
plot(mC_D, main="Poisson")
plot(mC_D_qp, main="Quasi-poisson")
plot(mC_D.nb, main="NB")
# parameters
summary(mC_D)
summary(mC_D_qp)
summary(mC_D.nb) # AIC 924
#note the prediction vs. observed isn't great, but that's not the point here
dev.off()
plot(predict(mC_D.nb, type="response",se.fit=T)$fit,CONIF_dens$COUNT)	#plots the exponentiated prediction back
abline(0,1, col="red")								#one to one line
plot(predict(mC_D.nb, type="response",se.fit=T)$fit, predict(mC_D.nb, type="response",se.fit=T)$se.fit, ylab="SE", xlab="Prediction")
abline(0,1, col="red")
#to do so, adding them into the glm above, but then check the diagnostics again of course
mC_D.nb <- 	glm.nb(COUNT ~ TREAT + SITE + (TREAT*SITE), link = log, data = CONIF_dens)
mC_D.nb.slope <- 	glm.nb(COUNT ~ TREAT + SITE + SLOPE  + (TREAT*SITE),
link = log, data = CONIF_dens)
par(mfrow=c(2,4))
plot(mC_D.nb, main="NB")
plot(mC_D.nb.slope, main="Slope")
summary(mC_D.nb) # AIC 924
summary(mC_D.nb.slope) # AIC 926
round(confint(mC_D.nb), digits = 2)
sqrt(mean(mC_D.nb$residuals^2))
sqrt(mean(mC_D.nb.slope$residuals^2))
#data frame - note that because we are setting the values we know the exact SE
dd <- data.frame(
group = c(rep("group1", 100),rep("group2", 100)),
values = c(rpois(n=100, lambda=2), rpois(n=100, lambda=7))
)
ss
preds$fit
#note the evidence it's back transformed proper
preds$fit; ss$mean
#now predict new data, but the response, which will back transform
preddata <- data.frame(group=unique(CONIF_dens$group))
View(dd)
#now predict new data, but the response, which will back transform
preddata <- data.frame(group=unique(CONIF_dens$TREAT))
preds <- predict(mC_D.nb, newdata=preddata, type="response", se.fit=T)
#now predict new data, but the response, which will back transform
preddata <- data.frame(group=unique(CONIF_dens$PLOT))
preds <- predict(mC_D.nb, newdata=preddata, type="response", se.fit=T)
#note the evidence it's back transformed proper
preds$fit; ss$mean
#note the evidence it's back transformed proper
preds$fit
preds <- predict(mC_D.nb, newdata=preddata, type="response", se.fit=T)
#now predict new data, but the response, which will back transform
preddata <- data.frame(PLOT=unique(CONIF_dens$PLOT))
preds <- predict(mC_D.nb, newdata=preddata, type="response", se.fit=T)
#now predict new data, but the response, which will back transform
preddata <- data.frame(PLOT=unique(CONIF_dens$PLOT))
preds<- predict(mC_D.nb, newdata=preddata, type="response", se.fit=T)
#now predict new data, but the response, which will back transform
preddata <- data.frame(TREAT = unique(CONIF_dens$TREAT))
preds<- predict(mC_D.nb, newdata=preddata, type="response", se.fit=T)
# unburned graphs
library(tidyverse)
library(ggplot2)
library(cowplot)
library(here)
theme_set(theme_cowplot())
options(scipen = 9999)
ba <- read.csv(here("ba.csv"))
dens <- read.csv(here("data/density.csv"))
plot_dens <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_HA = mean(COUNT_HA))
ba <- read.csv(here("ba.csv"))
ba <- read.csv(here("data/ba.csv"))
dens <- read.csv(here("data/density.csv"))
plot_dens <- dens %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(COUNT_HA = mean(COUNT_HA))
# density plot
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Conifer Density", title = "Unburned Density (stem/ha)") +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Decid. Density", title = "")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
density <- cowplot::plot_grid(conif_dens, decid_dens)
density
cconif_dens
conif_dens
# density plot
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Density (stem/ha)", title = "Conifer Density") +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Density (stem/ha)", title = "Deciduous Density")  +
scale_x_discrete(labels = c("Upland", "Lowland"))
density <- cowplot::plot_grid(conif_dens, decid_dens)
density
# basal area
plot_ba <- ba %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(BA_ha = mean(BA_ha))
# CONIF basal area
conif_ba <- plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = " ",y = "Basal Area (m2/ha)", title = "Conifer Basal Area")   +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland"))
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Aresa")   +
scale_x_discrete(labels = c("Upland", "Lowland"))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
lrow <- cowplot:: plot_grid(conif_dens, conif_ba, align = "v", axis = 'l', ncol = 1)
rrow <- cowplot:: plot_grid(decid_dens, decid_ba, align = "v", axis = "l", ncol = 1)
plot <- cowplot:: plot_grid(lrow, rrow, ncol = 2)
plot
fig3 <- cowplot:: plot_grid(lrow, rrow, ncol = 2)
fig3
"Unburned stand structure across site",
fontface = 'bold',
x = 0, hjust = 0) +
theme(plot.margin = margin(0,0,0,7))
"Unburned stand structure across site",
fontface = 'bold',
x = 0, hjust = 0) +
theme(plot.margin = margin(0,0,0,7))
fig3 + ggdraw() +
draw_label(
"Unburned stand structure across site",
fontface = 'bold',
x = 0, hjust = 0) +
theme(plot.margin = margin(0,0,0,7))
"Unburned stand structure across site",
fontface = 'bold',
x = 0, hjust = 0) +
theme(plot.margin = margin(0,0,0,7))
plot_grid(title, lrow, rrow, ncol = 2)
fig3
title <- ggdraw() +
draw_label(
"Miles per gallon decline with displacement and horsepower",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
plot_grid(
title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 14)
)
plot_grid(
title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 20)
)
plot_grid(
title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Aresa")   +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size=22))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Aresa")   +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size= 16))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Aresa")   +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 12))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
# density plot
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Density (stem/ha)", title = "Conifer Density") +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 12))
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Density (stem/ha)", title = "Deciduous Density")  +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 12))
density <- cowplot::plot_grid(conif_dens, decid_dens)
density
# basal area
plot_ba <- ba %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(BA_ha = mean(BA_ha))
# CONIF basal area
conif_ba <- plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = " ",y = "Basal Area (m2/ha)", title = "Conifer Basal Area")   +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 12))
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Aresa")   +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 12))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
lrow <- cowplot:: plot_grid(conif_dens, conif_ba, align = "v", axis = 'l', ncol = 1)
rrow <- cowplot:: plot_grid(decid_dens, decid_ba, align = "v", axis = "l", ncol = 1)
fig3 <- cowplot:: plot_grid(lrow, rrow, ncol = 2)
plot_grid(
title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0,
hjust = 0) +
theme(plot.title = element_text(size = 18),
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 20))
plot_grid(title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1))
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0, size = 18,
hjust = 0) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 20))
plot_grid(title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1))
conif_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = " ",y = "Density (stem/ha)", title = "Conifer Density") +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 14))
# DECID density
decid_dens <- plot_dens %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = COUNT_HA)) + geom_boxplot() +
labs(x = "",y = "Density (stem/ha)", title = "Deciduous Density")  +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 14))
density <- cowplot::plot_grid(conif_dens, decid_dens)
density
# rm(conif_dens, decid_dens)
# basal area
plot_ba <- ba %>%
group_by(SITE, TREAT, PLOT, DIV) %>%
summarise(BA_ha = mean(BA_ha))
# CONIF basal area
conif_ba <- plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "c") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = " ",y = "Basal Area (m2/ha)", title = "Conifer Basal Area")   +
theme(plot.title = element_text(hjust = 0)) +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 14))
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Aresa")   +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 14))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
# rm(conif_ba, decid_ba)
ba
# save_plot("ba_boxplot.png", ba)
lrow <- cowplot:: plot_grid(conif_dens, conif_ba, align = "v", axis = 'l', ncol = 1)
rrow <- cowplot:: plot_grid(decid_dens, decid_ba, align = "v", axis = "l", ncol = 1)
fig3 <- cowplot:: plot_grid(lrow, rrow, ncol = 2)
fig3
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0, size = 18,
hjust = 0) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 20))
plot_grid(title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1))
plot_grid(title, fig3,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1))
plot_grid(title, fig3,
ncol = 1,
rel_heights = c(0.1, 1))
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0, size = 17,
hjust = 0) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 20))
plot_grid(title, fig3,
ncol = 1,
rel_heights = c(0.1, 1))
# DECID basal area
decid_ba <-plot_ba %>%
filter(TREAT == 0) %>%
filter(DIV == "d") %>%
ggplot(aes(x = as.factor(SITE), y = BA_ha)) + geom_boxplot() +
labs(x = "",y = "Basal Area (m2/ha)", title = "Deciduous Basal Area")   +
scale_x_discrete(labels = c("Upland", "Lowland")) +
theme(plot.title = element_text(size = 14))
ba <- cowplot:: plot_grid(conif_ba, decid_ba, ncol = 2)
fig3_title <- plot_grid(title, fig3,
ncol = 1,
rel_heights = c(0.1, 1))
lrow <- cowplot:: plot_grid(conif_dens, conif_ba, align = "v", axis = 'l', ncol = 1)
rrow <- cowplot:: plot_grid(decid_dens, decid_ba, align = "v", axis = "l", ncol = 1)
fig3 <- cowplot:: plot_grid(lrow, rrow, ncol = 2)
title <- ggdraw() +
draw_label(
"Unburned Stand Structure between an Upland and Lowland Site",
fontface = 'bold',
x = 0, size = 17,
hjust = 0) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 20))
fig3_title <- plot_grid(title, fig3,
ncol = 1,
rel_heights = c(0.1, 1))
fig3_title

percent_canopy,
decay_class,
broken,
dead,
standish_x_garman_x_kozak_biomass_kg,
standish_x_fvs_x_kozak_biomass_kg,
jenkins_x_kozak_biomass_kg))
# allometric set 1
tsme_1 <- subset(tsme, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_fvs_x_kozak_biomass_kg))
# allometric set 2
tsme_2 <- subset(tsme, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_garman_x_kozak_biomass_kg))
# allometric set 3
tsme_3 <- subset(tsme, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
jenkins_x_kozak_biomass_kg))
# CANO
cano <- trees[which(trees$spp=="CANO"),]
cano <- subset(cano, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_garman_x_kozak_biomass_kg,
standish_x_hanus_x_kozak_biomass_kg,
jenkins_x_kozak_biomass_kg))
# allometric set 1
cano_1 <- subset(cano, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_garman_x_kozak_biomass_kg))
# allometric set 2
cano_2 <- subset(cano, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_hanus_x_kozak_biomass_kg))
# allometric set 3
cano_3 <- subset(cano, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
jenkins_x_kozak_biomass_kg))
# ALCR
alcr <- trees[which(trees$spp=="ALCR"),]
alcr <- subset(alcr, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_garman_x_kozak_biomass_kg,
standish_x_fvs_x_kozak_biomass_kg,
jenkins_x_kozak_biomass_kg))
# allometric set 1
alcr_1 <- subset(alcr, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_fvs_x_kozak_biomass_kg))
# allometric set 2
alcr_2 <- subset(alcr, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
standish_x_garman_x_kozak_biomass_kg))
# allometric set 3
alcr_3 <- subset(alcr, select=c(plot,
spp,
dbh_cm,
percent_canopy,
decay_class,
broken,
dead,
jenkins_x_kozak_biomass_kg))
# Bind rows for entire data frame (trees) and prioritized allometric sets
#trees <- dplyr::bind_rows(pisi,tshe,tsme,cano,alcr)
allo_set_1 <- dplyr::bind_rows(pisi_1,tshe_1,tsme_1,cano_1,alcr_1)
allo_set_2 <- dplyr::bind_rows(pisi_2,tshe_2,tsme_2,cano_2,alcr_2)
allo_set_3 <- dplyr::bind_rows(pisi_3,tshe_3,tsme_3,cano_3,alcr_3)
# Replace NA cells with 0 value
#allo_set_1: standish_x_garman and standish_x_fvs
allo_set_1$standish_x_garman_x_kozak_biomass_kg[
is.na(allo_set_1$standish_x_garman_x_kozak_biomass_kg)] <- 0 #cleaning
allo_set_1$standish_x_fvs_x_kozak_biomass_kg[
is.na(allo_set_1$standish_x_fvs_x_kozak_biomass_kg)] <- 0 #cleaning
#allo_set_2: standish_x_garman and standish_x_hanus
allo_set_2$standish_x_garman_x_kozak_biomass_kg[
is.na(allo_set_2$standish_x_garman_x_kozak_biomass_kg)] <- 0 #cleaning
allo_set_2$standish_x_hanus_x_kozak_biomass_kg[
is.na(allo_set_2$standish_x_hanus_x_kozak_biomass_kg)] <- 0 #cleaning
#allo_set_3: jenkins
allo_set_3$jenkins_x_kozak_biomass_kg[
is.na(allo_set_3$jenkins_x_kozak_biomass_kg)] <- 0 #cleaning
# Sum biomass since different species only have values for one method
allo_set_1$biomass_kg <- (allo_set_1$standish_x_garman_x_kozak_biomass_kg +
allo_set_1$standish_x_fvs_x_kozak_biomass_kg)
allo_set_2$biomass_kg <- (allo_set_2$standish_x_hanus_x_kozak_biomass_kg +
allo_set_2$standish_x_garman_x_kozak_biomass_kg)
allo_set_3$biomass_kg <- allo_set_3$jenkins_x_kozak_biomass_kg
# Determine biomass by plot
# Calculate total biomass by method by plot and convert from kg to Mg
allo_1 <- as.data.frame(NULL)
index <- unique(allo_set_1$plot) #allometric set 1
for (i in index) {
temp.a <- as.data.frame(subset(allo_set_1, plot==i))
temp.b <- data.frame(plot=i)
temp.b$allo_1_biomass_Mg <- sum(temp.a$biomass_kg) / 1000
allo_1 <- rbind(allo_1, temp.b)
} #end allo_1 "i in index" loop
allo_2 <- as.data.frame(NULL)
index <- unique(allo_set_2$plot) #allometric set 2
for (i in index) {
temp.a <- as.data.frame(subset(allo_set_2, plot==i))
temp.b <- data.frame(plot=i)
temp.b$allo_2_biomass_Mg <- sum(temp.a$biomass_kg) / 1000
allo_2 <- rbind(allo_2, temp.b)
} #end allo_2 "i in index" loop
allo_3 <- as.data.frame(NULL)
index <- unique(allo_set_3$plot) #allometric set 3
for (i in index) {
temp.a <- as.data.frame(subset(allo_set_3, plot==i))
temp.b <- data.frame(plot=i)
temp.b$allo_3_biomass_Mg <- sum(temp.a$biomass_kg) / 1000
allo_3 <- rbind(allo_3, temp.b)
} #end allo_3 "i in index" loop
# Create data frame for plot areas and fill with corresponding areas
plot <- c(1:44)
area_m2 <- 20^2
plot_area <- cbind(plot, area_m2)
plot_area[1, 2] <- 14.14^2
plot_area[2:4, 2] <- 19.2^2
plot_area <- as.data.frame(plot_area)
plot_area$area_ha <- plot_area$area_m2 / 10000
# Combine plot biomass and plot area
standing_biomass <- merge(allo_1, allo_2, by="plot")
standing_biomass <- merge(standing_biomass, allo_3, by="plot")
standing_biomass <- merge(standing_biomass, plot_area, by="plot")
# Calculate mass per area by allometric method
standing_biomass$allo_1_standing_Mg.ha <- standing_biomass$allo_1_biomass_Mg/standing_biomass$area_ha
standing_biomass$allo_2_standing_Mg.ha <- standing_biomass$allo_2_biomass_Mg/standing_biomass$area_ha
standing_biomass$allo_3_standing_Mg.ha <- standing_biomass$allo_3_biomass_Mg/standing_biomass$area_ha
# Subset relevant columns
standing_biomass <- subset(standing_biomass, select = c(plot,
allo_1_standing_Mg.ha,
allo_2_standing_Mg.ha,
allo_3_standing_Mg.ha))
# Downed biomass by tree: See excel file "downed_calculations.xlsx"
# Read data from Brown's line excel sheet
downed_biomass_raw <- read.csv("downed_calculations.csv")
# Rename columns
colnames(downed_biomass_raw)[colnames(downed_biomass_raw)=="plotnum"] <- "plot"
colnames(downed_biomass_raw)[colnames(downed_biomass_raw)=="treatment"] <- "line"
# Subset relevant columns/variables from massive table
downed_biomass_raw <- as.data.frame(subset(downed_biomass_raw, select = c(line,
plot,
total_Mg.per.ha)))
# Sum each line's biomass by plot
downed_biomass <- as.data.frame(NULL)
index <- unique(downed_biomass_raw$plot)
for (i in index) {
temp.a <- as.data.frame(subset(downed_biomass_raw, plot == i))
temp.b <- data.frame(plot = i)
temp.b$downed_Mg.ha <- sum(temp.a$total_Mg.per.ha)
downed_biomass <- rbind(downed_biomass, temp.b)
} #end downed_biomass "i in index" loop
# Delete 45th row
downed_biomass <- downed_biomass[-c(45), ]
# Summarize
#summary(downed_biomass)
# Read in ArcGIS data containing value extracted for each each plot (point)
gis <- read.delim("arc_table.txt", header = TRUE, sep = ",")
# Rename 'arcgis_table' columns for ease of reaccess in R
colnames(gis)[colnames(gis)=="ident"] <- "plot"
colnames(gis)[colnames(gis)=="LiDAR_Slope"] <- "slope_deg_lidar"
colnames(gis)[colnames(gis)=="Digital_Elevation_Model"] <- "elevation_m_lidar"
colnames(gis)[colnames(gis)=="Wind_Exposure"] <- "wind_exposure"
colnames(gis)[colnames(gis)=="slide_regime"] <- "slide_exposure"
colnames(gis)[colnames(gis)=="LiDAR_Slope_interpo"] <- "slope_deg_lidar_interpo"
colnames(gis)[colnames(gis)=="RASTERVALU"] <- "accum_area_sq_m_lidar_interpo"
colnames(gis)[colnames(gis)=="GeoMapUnit"] <- "geo_map_unit"
colnames(gis)[colnames(gis)=="pair"] <- "block"
# Summarize
#summary(gis)
# Isolate variables of interest
gis <- subset(gis, select = c(plot,
block,
elevation_m_lidar,
slope_deg_lidar_interpo,
accum_area_sq_m_lidar_interpo,
wind_exposure,
slide_exposure))
# Review structure of data
#str(gis)
#str(downed_biomass)
#str(standing_biomass)
# Merge gis, downed, and standing data frames
plots <- merge.data.frame(gis, downed_biomass, by = "plot")
plots <- merge.data.frame(plots, standing_biomass, by = "plot")
# Review
#str(plots)
# Sum standing biomass and downed biomass by plot by method
# (standing biomass + downed biomass = total aboveground biomass)
plots$allo_1_aboveground_Mg.ha <- (plots$allo_1_standing_Mg.ha + plots$downed_Mg.ha) #allometric set 1
plots$allo_2_aboveground_Mg.ha <- (plots$allo_2_standing_Mg.ha + plots$downed_Mg.ha) #allometric set 2
plots$allo_3_aboveground_Mg.ha <- (plots$allo_3_standing_Mg.ha + plots$downed_Mg.ha) #allometric set 3
# Calculate carbon mass in pools (downed, standing, and aboveground) by allometric set
# Downed carbon
plots$downed_MgC.ha <- 0.5 * plots$downed_Mg.ha
# Standing carbon
plots$allo_1_standing_MgC.ha <- 0.5 * plots$allo_1_standing_Mg.ha #allometric set 1
plots$allo_2_standing_MgC.ha <- 0.5 * plots$allo_2_standing_Mg.ha #allometric set 2
plots$allo_3_standing_MgC.ha <- 0.5 * plots$allo_3_standing_Mg.ha #allometric set 3
# Aboveground carbon (standing + downed)
plots$allo_1_aboveground_MgC.ha <- 0.5 * plots$allo_1_aboveground_Mg.ha #allometric set 1
plots$allo_2_aboveground_MgC.ha <- 0.5 * plots$allo_2_aboveground_Mg.ha #allometric set 2
plots$allo_3_aboveground_MgC.ha <- 0.5 * plots$allo_3_aboveground_Mg.ha #allometric set 3
# Isolate variables of interest
plots <-  subset(plots, select = c(plot,
block,
elevation_m_lidar,
slope_deg_lidar_interpo,
accum_area_sq_m_lidar_interpo,
wind_exposure,
slide_exposure,
allo_1_standing_MgC.ha,
allo_2_standing_MgC.ha,
allo_3_standing_MgC.ha,
downed_MgC.ha,
allo_1_aboveground_MgC.ha,
allo_2_aboveground_MgC.ha,
allo_3_aboveground_MgC.ha))
# End of plot synthesis
# Begin block calculations (block = two plots paired = sampling unit)
# Calculate difference in Carbon density, by pool (downed, standing, aboveground), and by allometric set
blocks <- as.data.frame(NULL)
index <- unique(plots$block)
for (i in index) {
temp.a <- as.data.frame(subset(plots, block==i)) #block data frame with both plots and associated data
temp.b <- data.frame(block=i) #empty block data frame
temp.h <- as.data.frame(subset(temp.a, slide_exposure == "high")) #subset one plot in block
temp.l <- as.data.frame(subset(temp.a, slide_exposure == "low")) #subset other plot in block
#allometric set 1 % diff. in standing C density w/in block between plots
temp.b$perc_diff_allo_1_standing_MgC.ha <-
((temp.h$allo_1_standing_MgC.ha - temp.l$allo_1_standing_MgC.ha) /
(sum(temp.a$allo_1_standing_MgC.ha)/2))*100
#allometric set 2 % diff. in standing C density w/in block between plots
temp.b$perc_diff_allo_2_standing_MgC.ha <-
((temp.h$allo_2_standing_MgC.ha - temp.l$allo_2_standing_MgC.ha) /
(sum(temp.a$allo_2_standing_MgC.ha)/2))*100
#allometric set 3 % diff. in standing C density w/in block between plots
temp.b$perc_diff_allo_3_standing_MgC.ha <-
((temp.h$allo_3_standing_MgC.ha - temp.l$allo_3_standing_MgC.ha) /
(sum(temp.a$allo_3_standing_MgC.ha)/2))*100
# % diff. in downed C density w/in block between plots
temp.b$perc_diff_downed_MgC.ha <-
((temp.h$downed_MgC.ha - temp.l$downed_MgC.ha) /
(sum(temp.a$downed_MgC.ha)/2))*100
#allometric set 1 % diff. in aboveground C density w/in block between plots
temp.b$perc_diff_allo_1_aboveground_MgC.ha <-
((temp.h$allo_1_aboveground_MgC.ha - temp.l$allo_1_aboveground_MgC.ha) /
(sum(temp.a$allo_1_aboveground_MgC.ha)/2))*100
#allometric set 2 % diff. in aboveground C density w/in block between plots
temp.b$perc_diff_allo_2_aboveground_MgC.ha <-
((temp.h$allo_2_aboveground_MgC.ha - temp.l$allo_2_aboveground_MgC.ha) /
(sum(temp.a$allo_2_aboveground_MgC.ha)/2))*100
#allometric set 3 % diff. in aboveground C density w/in block between plots
temp.b$perc_diff_allo_3_aboveground_MgC.ha <-
((temp.h$allo_3_aboveground_MgC.ha - temp.l$allo_3_aboveground_MgC.ha) /
(sum(temp.a$allo_3_aboveground_MgC.ha)/2))*100
temp.b$mean_wind_exposure <- mean(temp.a$wind_exposure) #mean wind exposure by block
#mean standing C density by block by allometric set
temp.b$mean_allo_1_standing_MgC.ha <- mean(temp.a$allo_1_standing_MgC.ha)
temp.b$mean_allo_2_standing_MgC.ha <- mean(temp.a$allo_2_standing_MgC.ha)
temp.b$mean_allo_3_standing_MgC.ha <- mean(temp.a$allo_3_standing_MgC.ha)
#mean downed C density by block
temp.b$mean_downed_MgC.ha <- mean(temp.a$downed_MgC.ha)
#mean aboveground C density by block by allometric set
temp.b$mean_allo_1_aboveground_MgC.ha <- mean(temp.a$allo_1_aboveground_MgC.ha)
temp.b$mean_allo_2_aboveground_MgC.ha <- mean(temp.a$allo_2_aboveground_MgC.ha)
temp.b$mean_allo_3_aboveground_MgC.ha <- mean(temp.a$allo_3_aboveground_MgC.ha)
blocks <- rbind(blocks, temp.b) #bind block i to summary data frame
} #end blocks "i in index" loop
# Review
#str(blocks)
#str(plots)
# Organize iterations (for both 'plots' and 'blocks')
plot_loop[[j]] <- plots #attach iteration to null plot_loop list
block_loop[[j]] <- blocks #attach iteration to null block_loop list
print(j) #print iteration
} #end "j in k" loop-de-loop
# Note:
#for mean allometric values comment out variance component in height loop, biomass loop, and Kozak function
#for allometric variance uncomment variance components in height loop, biomass loop, and Kozak function
# Review loop output
class(plot_loop) #plot_loop
length(plot_loop)
summary(plot_loop)
str(plot_loop)
class(block_loop) #block_loop
length(block_loop)
summary(block_loop)
str(block_loop)
# Begin summary across iterations
# Block loop reorganization
variables <- 1:ncol(block_loop[[1]]) #across variables (allometric model columns index)
block_mean <- as.list(NULL)
block_sd <- as.list(NULL)
rows <- 1:nrow(block_loop[[1]]) #across rows (block index)
r.list <- as.list(NULL)
elements <- 1:length(block_loop) #across elements (iterations index)
e.list <- as.list(NULL)
for (v in variables){ #across variables (block_loop columns)
for (r in rows) { #across rows (trees)
for (e in elements) { #across elements (iterations)
temp.e <- block_loop[[e]][[v]] #variable v isolation from element e
e.list$value[e] <- temp.e[r] #row r isolation from element e
} #end "e in elements" loop
r.list$mean[r] <- mean(e.list$value) #mean row value across elements
r.list$var[r] <- sqrt(var(e.list$value)) #row variance value across elements
} #end "r in rows" loop
block_mean[v] <- r.list[1]
block_sd[v] <- r.list[2]
} #end "v in variables" loop
# Name variables (currently numbered)
names(block_mean)[1] <- "block"
names(block_mean)[2] <- "perc_diff_allo_1_standing_MgC.ha"
names(block_mean)[3] <- "perc_diff_allo_2_standing_MgC.ha"
names(block_mean)[4] <- "perc_diff_allo_3_standing_MgC.ha"
names(block_mean)[5] <- "perc_diff_downed_MgC.ha"
names(block_mean)[6] <- "perc_diff_allo_1_aboveground_MgC.ha"
names(block_mean)[7] <- "perc_diff_allo_2_aboveground_MgC.ha"
names(block_mean)[8] <- "perc_diff_allo_3_aboveground_MgC.ha"
names(block_mean)[9] <- "block_wind_exposure"
names(block_mean)[10] <- "block_allo_1_standing_MgC.ha"
names(block_mean)[11] <- "block_allo_2_standing_MgC.ha"
names(block_mean)[12] <- "block_allo_3_standing_MgC.ha"
names(block_mean)[13] <- "block_downed_MgC.ha"
names(block_mean)[14] <- "block_allo_1_aboveground_MgC.ha"
names(block_mean)[15] <- "block_allo_2_aboveground_MgC.ha"
names(block_mean)[16] <- "block_allo_3_aboveground_MgC.ha"
names(block_sd)[1] <- "block"
names(block_sd)[2] <- "perc_diff_allo_1_standing_MgC.ha"
names(block_sd)[3] <- "perc_diff_allo_2_standing_MgC.ha"
names(block_sd)[4] <- "perc_diff_allo_3_standing_MgC.ha"
names(block_sd)[5] <- "perc_diff_downed_MgC.ha"
names(block_sd)[6] <- "perc_diff_allo_1_aboveground_MgC.ha"
names(block_sd)[7] <- "perc_diff_allo_2_aboveground_MgC.ha"
names(block_sd)[8] <- "perc_diff_allo_3_aboveground_MgC.ha"
names(block_sd)[9] <- "block_wind_exposure"
names(block_sd)[10] <- "block_allo_1_standing_MgC.ha"
names(block_sd)[11] <- "block_allo_2_standing_MgC.ha"
names(block_sd)[12] <- "block_allo_3_standing_MgC.ha"
names(block_sd)[13] <- "block_downed_MgC.ha"
names(block_sd)[14] <- "block_allo_1_aboveground_MgC.ha"
names(block_sd)[15] <- "block_allo_2_aboveground_MgC.ha"
names(block_sd)[16] <- "block_allo_3_aboveground_MgC.ha"
# Review blocks
str(block_mean)
str(block_sd)
summary(block_mean)
summary(block_sd)
# % difference within blocks, by allometric set =
# high slide exposure plot biomass minus low slide exposure plot biomass
summary(block_mean[["perc_diff_allo_1_aboveground_MgC.ha"]])
summary(block_sd[["perc_diff_allo_1_aboveground_MgC.ha"]])
summary(block_mean[["perc_diff_allo_2_aboveground_MgC.ha"]])
summary(block_sd[["perc_diff_allo_2_aboveground_MgC.ha"]])
summary(block_mean[["perc_diff_allo_3_aboveground_MgC.ha"]])
summary(block_sd[["perc_diff_allo_3_aboveground_MgC.ha"]])
# Average block biomass = paired plot average biomass
summary(block_mean[["block_allo_1_aboveground_MgC.ha"]])
summary(block_sd[["block_allo_1_aboveground_MgC.ha"]])
summary(block_mean[["block_allo_2_aboveground_MgC.ha"]])
summary(block_sd[["block_allo_2_aboveground_MgC.ha"]])
summary(block_mean[["block_allo_3_aboveground_MgC.ha"]])
summary(block_sd[["block_allo_3_aboveground_MgC.ha"]])
# Plot loop reorganization
variables <- 1:ncol(plot_loop[[1]]) #across variables (allometric model columns index)
plot_mean <- as.list(NULL)
plot_sd <- as.list(NULL)
rows <- 1:nrow(plot_loop[[1]]) #across rows (plot index)
r.list <- as.list(NULL)
elements <- 1:length(plot_loop) #across elements (iterations index)
e.list <- as.list(NULL)
for (v in variables){ #across variables (plot_loop columns)
for (r in rows) { #across rows (trees)
for (e in elements) { #across elements (iterations)
temp.e <- plot_loop[[e]][[v]] #variable v isolation from element e
e.list$value[e] <- temp.e[r] #row r isolation from element e
}
r.list$mean[r] <- mean(e.list$value) #mean row value across elements
r.list$var[r] <- sqrt(var(e.list$value)) #row sd value across elements
}
plot_mean[v] <- r.list[1]
plot_sd[v] <- r.list[2]
}
# Name variables (currently numbered)
names(plot_mean)[1] <- "plot"
names(plot_mean)[2] <- "block"
names(plot_mean)[3] <- "elevation_m_lidar"
names(plot_mean)[4] <- "slope_deg_lidar_interpo"
names(plot_mean)[5] <- "accum_area_sq_m_lidar_interpo"
names(plot_mean)[6] <- "wind_exposure"
names(plot_mean)[7] <- "slide_exposure"
plot_mean$slide_exposure[plot_mean$slide_exposure == 2] <- 0
#edit values so that 0=low slide exposure and 1=high slide exposure
names(plot_mean)[8] <- "allo_1_standing_MgC.ha"
names(plot_mean)[9] <- "allo_2_standing_MgC.ha"
names(plot_mean)[10] <- "allo_3_standing_MgC.ha"
names(plot_mean)[11] <- "downed_MgC.ha"
names(plot_mean)[12] <- "allo_1_aboveground_MgC.ha"
names(plot_mean)[13] <- "allo_2_aboveground_MgC.ha"
names(plot_mean)[14] <- "allo_3_aboveground_MgC.ha"
names(plot_sd)[1] <- "plot"
names(plot_sd)[2] <- "block"
names(plot_sd)[3] <- "elevation_m_lidar"
names(plot_sd)[4] <- "slope_deg_lidar_interpo"
names(plot_sd)[5] <- "accum_area_sq_m_lidar_interpo"
names(plot_sd)[6] <- "wind_exposure"
names(plot_sd)[7] <- "slide_exposure"
names(plot_sd)[8] <- "allo_1_standing_MgC.ha"
names(plot_sd)[9] <- "allo_2_standing_MgC.ha"
names(plot_sd)[10] <- "allo_3_standing_MgC.ha"
names(plot_sd)[11] <- "downed_MgC.ha"
names(plot_sd)[12] <- "allo_1_aboveground_MgC.ha"
names(plot_sd)[13] <- "allo_2_aboveground_MgC.ha"
names(plot_sd)[14] <- "allo_3_aboveground_MgC.ha"
# Review plots
str(plot_mean)
str(plot_sd)
summary(plot_mean)
summary(plot_sd)
# Biomass by plot and by allometric set
summary(plot_mean[["allo_1_aboveground_MgC.ha"]])
summary(plot_sd[["allo_1_aboveground_MgC.ha"]])
summary(plot_mean[["allo_2_aboveground_MgC.ha"]])
summary(plot_sd[["allo_2_aboveground_MgC.ha"]])
summary(plot_mean[["allo_3_aboveground_MgC.ha"]])
summary(plot_sd[["allo_3_aboveground_MgC.ha"]])
# Tidy up
rm(list=setdiff(ls(), c("block_mean", "block_sd", "plot_mean", "plot_sd")))
# Gholz et al., 1979
# Formula: ln(y) = a+b*ln(x)
# Where y = either 1 of 5:
# (1) total foliage biomass (bft)
# (2) live branch biomass (blb)
# (3) dead branch biomass (bdb)
# (4) stem wood biomass without bark (bst)
# (5) stem bark biomass (bbk)
# and x = dbh in centimeters (dbh_cm)
gholz <- function(dbh_cm, a, b) {
y <- a+b*log(dbh_cm)
biomass_kg <- exp(y)
return(biomass_kg)
} #general formula for TSHE, TSME, CANO, and ALCR
library(sjPlot)
library(here)
library(parameters)
library(stats)
library(ggplot2)
library(cowplot); theme_set(theme_cowplot())
options(scipen = 9999)
# bringing in data
# density
all <- read.csv(here("all.csv")); all <- all[all$TREAT !=0,] # removing unburned sites
# basal area
ba <- read.csv(here("ba.csv"), stringsAsFactors = F); ba <- ba[ba$TREAT != 0,]
library(sjPlot)
library(here)
library(parameters)
library(stats)
library(ggplot2)
library(cowplot); theme_set(theme_cowplot())
options(scipen = 9999)
